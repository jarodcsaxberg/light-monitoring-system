ARM GAS  /tmp/ccCMQWME.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"log.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.GetPage,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	GetPage:
  26              	.LVL0:
  27              	.LFB318:
  28              		.file 1 "Src/log.c"
   1:Src/log.c     **** #include <_ansi.h>
   2:Src/log.c     **** #include <_syslist.h>
   3:Src/log.c     **** #include <errno.h>
   4:Src/log.c     **** #include <sys/time.h>
   5:Src/log.c     **** #include <sys/times.h>
   6:Src/log.c     **** #include <limits.h>
   7:Src/log.c     **** #include <signal.h>
   8:Src/log.c     **** #include <stdint.h>
   9:Src/log.c     **** #include <stdio.h>
  10:Src/log.c     **** #include "retarget.h"
  11:Src/log.c     **** #include "main.h"
  12:Src/log.c     **** #include <string.h>
  13:Src/log.c     **** #include <stdlib.h>
  14:Src/log.c     **** #include <time.h>
  15:Src/log.c     **** 
  16:Src/log.c     **** #include "log.h"
  17:Src/log.c     **** #include "sensor.h"
  18:Src/log.c     **** #include "rtc.h"
  19:Src/log.c     **** 
  20:Src/log.c     **** extern uint64_t __fini_array_end;
  21:Src/log.c     **** extern uint64_t _edata;
  22:Src/log.c     **** extern uint64_t _sdata;
  23:Src/log.c     **** 
  24:Src/log.c     **** flash_status_t fs;
  25:Src/log.c     **** 
  26:Src/log.c     **** /*
  27:Src/log.c     ****   uint8_t watermark;
  28:Src/log.c     ****   uint8_t status;
  29:Src/log.c     ****   uint16_t record_number;
  30:Src/log.c     ****   uint32_t timestamp;
ARM GAS  /tmp/ccCMQWME.s 			page 2


  31:Src/log.c     ****   uint8_t msg[8]; 
  32:Src/log.c     **** */
  33:Src/log.c     **** //Print log records from flash
  34:Src/log.c     **** void print_logs(int count){
  35:Src/log.c     ****   uint64_t* start = fs.data_start;
  36:Src/log.c     ****   uint64_t* end = fs.next_address;
  37:Src/log.c     ****   int i = 0;
  38:Src/log.c     **** 
  39:Src/log.c     ****   while(start > end){
  40:Src/log.c     ****     if(((*start & MASK_STATUS) >> 8) == 2){
  41:Src/log.c     ****       if(i == count) 
  42:Src/log.c     ****         break;
  43:Src/log.c     **** 
  44:Src/log.c     ****       uint16_t record_number = (*start & MASK_RECORD_NUMBER) >> 16;
  45:Src/log.c     ****       uint32_t timestamp = (*start & MASK_TIMESTAMP) >> 32;
  46:Src/log.c     ****       start--;
  47:Src/log.c     ****       uint8_t* msg = (uint8_t*) start;
  48:Src/log.c     ****       start--;      
  49:Src/log.c     **** 
  50:Src/log.c     ****       time_t rawtime = (time_t) timestamp;
  51:Src/log.c     ****       struct tm ts;
  52:Src/log.c     ****       char time[20];
  53:Src/log.c     **** 
  54:Src/log.c     ****       ts = *localtime(&rawtime);
  55:Src/log.c     ****       strftime(time, sizeof(time), "%m/%d/%Y,%H:%M:%S", &ts);
  56:Src/log.c     **** 
  57:Src/log.c     ****       printf("L,%d,%s,", record_number, time);
  58:Src/log.c     **** 
  59:Src/log.c     ****       for(int i = 0; msg[i] != '\0'; i++){
  60:Src/log.c     ****         printf("%c", msg[i]);
  61:Src/log.c     ****       }
  62:Src/log.c     ****       
  63:Src/log.c     ****       printf("\r\n");
  64:Src/log.c     **** 
  65:Src/log.c     ****       if(count > 0)
  66:Src/log.c     ****         i++;
  67:Src/log.c     ****     } else {
  68:Src/log.c     ****       start -= 2;
  69:Src/log.c     ****     }
  70:Src/log.c     ****   }
  71:Src/log.c     **** }
  72:Src/log.c     **** 
  73:Src/log.c     **** /*
  74:Src/log.c     ****   uint8_t watermark;               
  75:Src/log.c     ****   uint8_t status;
  76:Src/log.c     ****   uint16_t record_number;
  77:Src/log.c     ****   uint32_t timestamp;            
  78:Src/log.c     ****   uint16_t battery_voltage
  79:Src/log.c     ****   int16_t temperature;
  80:Src/log.c     ****   uint32_t sensor_period;
  81:Src/log.c     **** */
  82:Src/log.c     **** //Print data records from flash
  83:Src/log.c     **** void print_data(int count){
  84:Src/log.c     ****   uint64_t* start = fs.data_start;
  85:Src/log.c     ****   uint64_t* end = fs.next_address;
  86:Src/log.c     ****   int i = 0;
  87:Src/log.c     ****   
ARM GAS  /tmp/ccCMQWME.s 			page 3


  88:Src/log.c     ****   while(start > end){
  89:Src/log.c     ****     if(((*start & MASK_STATUS) >> 8) == 1){
  90:Src/log.c     ****       if(i == count)
  91:Src/log.c     ****         break;
  92:Src/log.c     **** 
  93:Src/log.c     ****       uint16_t record_number = (*start & MASK_RECORD_NUMBER) >> 16;
  94:Src/log.c     ****       uint32_t timestamp = (*start & MASK_TIMESTAMP) >> 32;
  95:Src/log.c     ****       start--;
  96:Src/log.c     ****       uint16_t voltage = *start & MASK_VOLTAGE;
  97:Src/log.c     ****       int16_t temperature = (*start & MASK_TEMPERATURE) >> 16;
  98:Src/log.c     ****       uint32_t period = (*start & MASK_SENSOR_PERIOD) >> 32;
  99:Src/log.c     ****       start--;
 100:Src/log.c     **** 
 101:Src/log.c     ****       time_t rawtime = (time_t) timestamp;
 102:Src/log.c     ****       struct tm ts;
 103:Src/log.c     ****       char time[20];
 104:Src/log.c     **** 
 105:Src/log.c     ****       ts = *localtime(&rawtime);
 106:Src/log.c     ****       strftime(time, sizeof(time), "%m/%d/%Y,%H:%M:%S", &ts);
 107:Src/log.c     **** 
 108:Src/log.c     ****       printf("D,%d,%s,%d.%d,%d,%d.%d\r\n", record_number, time, (int)voltage/1000, 
 109:Src/log.c     ****                                            (int)voltage%1000, (int)temperature, 
 110:Src/log.c     ****                                            (int)period/1000, (int)period%1000);
 111:Src/log.c     ****       if(count > 0)
 112:Src/log.c     ****         i++;
 113:Src/log.c     ****     } else {
 114:Src/log.c     ****       start -= 2;
 115:Src/log.c     ****     }
 116:Src/log.c     ****   }
 117:Src/log.c     **** 
 118:Src/log.c     **** }
 119:Src/log.c     **** 
 120:Src/log.c     **** //Writes current sensor readings to flash
 121:Src/log.c     **** uint8_t store_entry(void) {
 122:Src/log.c     ****   uint32_t period = calculate_period();
 123:Src/log.c     ****   uint32_t temp = read_temp();
 124:Src/log.c     ****   uint32_t voltage = read_vrefint();
 125:Src/log.c     ****   uint32_t t = get_td_bits();
 126:Src/log.c     **** 
 127:Src/log.c     ****   /*Error checking*/
 128:Src/log.c     ****   if(t < 0)
 129:Src/log.c     ****     return -1;
 130:Src/log.c     **** 
 131:Src/log.c     ****   sensordata_t data = {0};
 132:Src/log.c     ****   data.watermark = 0x01;
 133:Src/log.c     ****   data.status = SENSOR_DATA;
 134:Src/log.c     ****   data.record_number = fs.next_record_number;
 135:Src/log.c     ****   data.timestamp = t;
 136:Src/log.c     ****   data.battery_voltage = (uint16_t) voltage;
 137:Src/log.c     ****   data.temperature = (int16_t) temp;
 138:Src/log.c     ****   data.sensor_period = (uint32_t) period;
 139:Src/log.c     **** 
 140:Src/log.c     ****   /*Data structure debug*/
 141:Src/log.c     **** /*
 142:Src/log.c     ****   printf("-----------------\r\n");
 143:Src/log.c     ****   printf("Data Struct:\r\n");
 144:Src/log.c     ****   printf("watermark: %u\r\n", data.watermark);
ARM GAS  /tmp/ccCMQWME.s 			page 4


 145:Src/log.c     ****   printf("status: %u\r\n", data.status);
 146:Src/log.c     ****   printf("record: %u\r\n", data.record_number);
 147:Src/log.c     ****   printf("timestamp: %ld\r\n", data.timestamp);
 148:Src/log.c     ****   printf("batt_volt: %u\r\n", data.battery_voltage);
 149:Src/log.c     ****   printf("temperature: %d\r\n", data.temperature);
 150:Src/log.c     ****   printf("sensor: %lu\r\n", data.sensor_period);
 151:Src/log.c     **** */
 152:Src/log.c     ****   uint8_t write_err = write_record(&data);
 153:Src/log.c     ****   if(write_err) {
 154:Src/log.c     ****     printf("NOK (store_entry: write error)\r\n");
 155:Src/log.c     ****     return 1;
 156:Src/log.c     ****   }
 157:Src/log.c     ****   return 0;
 158:Src/log.c     **** }
 159:Src/log.c     **** 
 160:Src/log.c     **** //writes a short message to flash
 161:Src/log.c     **** uint8_t log_entry(char *message) {
 162:Src/log.c     ****   uint32_t t = get_td_bits();
 163:Src/log.c     ****   int i;
 164:Src/log.c     **** 
 165:Src/log.c     ****   /*Error checking*/
 166:Src/log.c     ****   if(t < 0)
 167:Src/log.c     ****     return -1;
 168:Src/log.c     ****   if(message == NULL)
 169:Src/log.c     ****     return -1;
 170:Src/log.c     **** 
 171:Src/log.c     ****   logdata_t data = {0};
 172:Src/log.c     ****   data.watermark = 0x01;
 173:Src/log.c     ****   data.status = LOG_DATA;
 174:Src/log.c     ****   data.record_number = fs.next_record_number;
 175:Src/log.c     ****   data.timestamp = t;
 176:Src/log.c     ****   //Copy the first seven characters of message
 177:Src/log.c     ****   for(i=0; message[i] && i < 7; i++) {
 178:Src/log.c     ****     data.msg[i] = (uint8_t)message[i];
 179:Src/log.c     ****   }
 180:Src/log.c     ****   data.msg[i] = '\0';
 181:Src/log.c     **** 
 182:Src/log.c     ****   /*Data structure debug*/
 183:Src/log.c     **** /*
 184:Src/log.c     ****   printf("-----------------\r\n");
 185:Src/log.c     ****   printf("Data Struct:\r\n");
 186:Src/log.c     ****   printf("watermark: %u\r\n", data.watermark);
 187:Src/log.c     ****   printf("status: %u\r\n", data.status);
 188:Src/log.c     ****   printf("record: %u\r\n", data.record_number);
 189:Src/log.c     ****   printf("timestamp: %ld\r\n", data.timestamp);
 190:Src/log.c     ****   printf("msg: %s\r\n", data.msg);
 191:Src/log.c     **** */
 192:Src/log.c     ****   uint8_t write_err = write_record(&data);
 193:Src/log.c     ****   if(write_err) {
 194:Src/log.c     ****     printf("NOK (log_entry: write error)\r\n");
 195:Src/log.c     ****     return 1;
 196:Src/log.c     ****   }
 197:Src/log.c     ****   return 0;
 198:Src/log.c     **** }
 199:Src/log.c     **** 
 200:Src/log.c     **** /******************************************************************************/
 201:Src/log.c     **** /*****************************Flash Section************************************/
ARM GAS  /tmp/ccCMQWME.s 			page 5


 202:Src/log.c     **** /******************************************************************************/
 203:Src/log.c     **** 
 204:Src/log.c     **** //function to initialize a sentinel to its position
 205:Src/log.c     **** uint8_t write_sentinel(uint64_t *address, raw_t *sentinel) {
 206:Src/log.c     ****   HAL_StatusTypeDef err_status;
 207:Src/log.c     ****   uint64_t *write_address;
 208:Src/log.c     ****   //error checking
 209:Src/log.c     ****   if(!sentinel || !address) {
 210:Src/log.c     ****     printf("Sentinel or address is not set\r\n");
 211:Src/log.c     ****     return 1;
 212:Src/log.c     ****   }
 213:Src/log.c     **** 
 214:Src/log.c     ****   write_address = address;
 215:Src/log.c     **** 
 216:Src/log.c     ****   HAL_FLASH_Unlock();
 217:Src/log.c     ****   err_status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (uint32_t) write_address, sentinel->
 218:Src/log.c     ****   if (err_status) {
 219:Src/log.c     ****     HAL_FLASH_Lock();
 220:Src/log.c     ****     printf("NOK (write_sentinel: raw0)\r\n");
 221:Src/log.c     ****     return 1;
 222:Src/log.c     ****   }
 223:Src/log.c     ****   write_address--; //move to the next address before writing next 8 bytes
 224:Src/log.c     ****   err_status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (uint32_t) write_address, sentinel->
 225:Src/log.c     ****   if (err_status) {
 226:Src/log.c     ****     HAL_FLASH_Lock();
 227:Src/log.c     ****     printf("NOK (write_sentinel: raw1)\r\n");
 228:Src/log.c     ****     return 1;
 229:Src/log.c     ****   }
 230:Src/log.c     ****   HAL_FLASH_Lock();
 231:Src/log.c     **** 
 232:Src/log.c     ****   return 0;
 233:Src/log.c     **** }
 234:Src/log.c     **** 
 235:Src/log.c     **** //function to write data to flash
 236:Src/log.c     **** uint8_t write_record(void *record) {
 237:Src/log.c     ****   raw_t *write_data;
 238:Src/log.c     ****   HAL_StatusTypeDef err_status=0;
 239:Src/log.c     **** 
 240:Src/log.c     ****   //error checking
 241:Src/log.c     ****   if(!record){
 242:Src/log.c     ****     return 1;
 243:Src/log.c     ****   }
 244:Src/log.c     ****   if(fs.total_records >= fs.max_possible_records) {
 245:Src/log.c     ****     printf("NOK (write_record: flash_full)\r\n");
 246:Src/log.c     ****     return 1;
 247:Src/log.c     ****   }
 248:Src/log.c     **** 
 249:Src/log.c     ****   write_data = (raw_t *) record;
 250:Src/log.c     **** 
 251:Src/log.c     ****   HAL_FLASH_Unlock();
 252:Src/log.c     ****   err_status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (uint32_t) fs.next_address, write_da
 253:Src/log.c     ****   if (err_status) {
 254:Src/log.c     ****     printf("NOK (write_record: first flash)\r\n");
 255:Src/log.c     ****     HAL_FLASH_Lock();
 256:Src/log.c     ****     return 1;
 257:Src/log.c     ****   }
 258:Src/log.c     ****   fs.next_address--; //move to the next address before writing next 8 bytes
ARM GAS  /tmp/ccCMQWME.s 			page 6


 259:Src/log.c     ****   err_status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (uint32_t) fs.next_address, write_da
 260:Src/log.c     ****   if (err_status) {
 261:Src/log.c     ****     printf("NOK (write_record: second flash)\r\n");
 262:Src/log.c     ****     HAL_FLASH_Lock();
 263:Src/log.c     ****     return 1;
 264:Src/log.c     ****   }
 265:Src/log.c     ****   fs.next_address--; //move to the next address before writing next 8 bytes
 266:Src/log.c     ****   HAL_FLASH_Lock();
 267:Src/log.c     ****   //update fs
 268:Src/log.c     ****   fs.next_record_number++;
 269:Src/log.c     ****   fs.total_records++;
 270:Src/log.c     **** 
 271:Src/log.c     ****   return 0;
 272:Src/log.c     **** }
 273:Src/log.c     **** 
 274:Src/log.c     **** uint8_t flash_write_init() {
 275:Src/log.c     ****   sensordata_t *sd = {0};
 276:Src/log.c     ****   uint16_t record_counter = 0;
 277:Src/log.c     ****   //raw_t sentinel_top = {SENTINEL_MARK_TOP, 0};
 278:Src/log.c     ****   raw_t sentinel_bottom = {SENTINEL_MARK_BOTTOM, 0};
 279:Src/log.c     **** 
 280:Src/log.c     ****   //address the end of the program
 281:Src/log.c     ****   uint64_t *program_end = (uint64_t *) ((uint32_t )&__fini_array_end
 282:Src/log.c     ****                                         + (uint32_t)&_edata
 283:Src/log.c     ****                                         - (uint32_t)&_sdata);
 284:Src/log.c     ****   //address the top  of flash, fixed based on MCU variant
 285:Src/log.c     ****   uint64_t *top = (uint64_t *) FLASH_END;
 286:Src/log.c     ****   //address of the bottom of flash available for records
 287:Src/log.c     ****   uint64_t *bottom = (uint64_t *) (((uint32_t)program_end & ~0x7FF) + 0x800);
 288:Src/log.c     ****   //top memory pointer: located at the very top of flash
 289:Src/log.c     ****   uint64_t *pt = top;//find_sentinel_top(top, bottom);
 290:Src/log.c     ****   //bottom memory pointer: located at the first open page after the software
 291:Src/log.c     ****   uint64_t *pb = find_sentinel_bottom(top, bottom);
 292:Src/log.c     **** 
 293:Src/log.c     ****   /*
 294:Src/log.c     ****   There are 4 cases for the top and bottom memory ptrs.
 295:Src/log.c     ****   1) pt = 0, pb =0: memory uninitialized
 296:Src/log.c     ****   Action: Erase memory if needed, add top and bottom sentinels
 297:Src/log.c     ****   2) pt > 0, pb =0: lower sentinel has been corrupted,
 298:Src/log.c     ****   Action: restore lower sentinel. Accept that dat may have been lost
 299:Src/log.c     ****   3) pt = 0, pb >0: upper sentinel has been corrupted
 300:Src/log.c     ****   Action: erase memory, add top and bottom sentinels
 301:Src/log.c     ****   4) pt > 0, pb >0: Memory is initialized
 302:Src/log.c     ****   Action: no memory changes are necessary
 303:Src/log.c     ****   */
 304:Src/log.c     ****   /*********************************************Sentinel Checking**************/
 305:Src/log.c     ****   if((!pt) && (!pb)) {
 306:Src/log.c     ****     /*Write top sentinel*/
 307:Src/log.c     ****     /*
 308:Src/log.c     ****     if(write_sentinel(top,&sentinal_top)) {
 309:Src/log.c     ****       printf("Failed to write top sentinel\r\n");
 310:Src/log.c     ****       return -1;
 311:Src/log.c     ****     }*/
 312:Src/log.c     ****     //*********************************end fix**************************
 313:Src/log.c     **** 
 314:Src/log.c     ****     //Erase flash
 315:Src/log.c     ****     if(flash_erase()) {
ARM GAS  /tmp/ccCMQWME.s 			page 7


 316:Src/log.c     ****       printf("NOK (flash_write_init: erase flash)\r\n");
 317:Src/log.c     ****       return -1;
 318:Src/log.c     ****     }
 319:Src/log.c     **** 
 320:Src/log.c     ****     /*Write bottom sentinel*/
 321:Src/log.c     ****     if(write_sentinel(bottom,&sentinel_bottom)) {
 322:Src/log.c     ****       printf("NOK (flash_write_init: bottom sentinel)\r\n");
 323:Src/log.c     ****       return -1;
 324:Src/log.c     ****     }
 325:Src/log.c     ****   }
 326:Src/log.c     ****   else if(pt && !pb) {
 327:Src/log.c     ****     /*Write bottom sentinel*/
 328:Src/log.c     ****     if(write_sentinel(bottom, &sentinel_bottom)) {
 329:Src/log.c     ****       printf("NOK (flash_write_init: bottom sentinel)\r\n");
 330:Src/log.c     ****       return -1;
 331:Src/log.c     ****     }
 332:Src/log.c     ****   }
 333:Src/log.c     ****   else if(!pt && pb) {
 334:Src/log.c     ****     return -1;
 335:Src/log.c     ****   }
 336:Src/log.c     ****   else if(pt && pb) {
 337:Src/log.c     ****     if(pb!=bottom) {
 338:Src/log.c     ****       printf("NOK (flash_write_init: sentinel not at bottom)\r\n");
 339:Src/log.c     ****       return -1;
 340:Src/log.c     ****     }
 341:Src/log.c     ****   }
 342:Src/log.c     ****   else {
 343:Src/log.c     ****     printf("NOK (flash_write_init: undefined memory condition)\r\n");
 344:Src/log.c     ****     return -1;
 345:Src/log.c     ****   }
 346:Src/log.c     **** 
 347:Src/log.c     ****   /*********************************************Initialize Flash***************/
 348:Src/log.c     ****   fs.data_start = top - 2;
 349:Src/log.c     ****   fs.max_possible_records = (((uint32_t)top-(uint32_t)bottom)>>4)-1;
 350:Src/log.c     ****   sd = (sensordata_t *) top;
 351:Src/log.c     ****   sd--;
 352:Src/log.c     ****   while ((sd->watermark!=0xFF) && (sd->watermark!=0xa5)) {
 353:Src/log.c     ****     record_counter++;
 354:Src/log.c     ****     sd--;
 355:Src/log.c     ****   }
 356:Src/log.c     ****   fs.next_record_number = record_counter;
 357:Src/log.c     ****   fs.total_records = record_counter;
 358:Src/log.c     ****   fs.next_address = (uint64_t *) sd;
 359:Src/log.c     **** 
 360:Src/log.c     ****   return 0;
 361:Src/log.c     **** }
 362:Src/log.c     **** 
 363:Src/log.c     **** //No longer used
 364:Src/log.c     **** /*
 365:Src/log.c     **** uint64_t *find_sentinel_top(uint64_t *top, uint64_t *bottom) {
 366:Src/log.c     ****   return 0;
 367:Src/log.c     **** }
 368:Src/log.c     **** */
 369:Src/log.c     **** 
 370:Src/log.c     **** uint64_t *find_sentinel_bottom(uint64_t *top, uint64_t *bottom) {
 371:Src/log.c     ****   //address the bottom of flash, fixed based on MCU variant
 372:Src/log.c     ****   uint64_t *current_addr = bottom;
ARM GAS  /tmp/ccCMQWME.s 			page 8


 373:Src/log.c     **** 
 374:Src/log.c     ****   //start from the bottom of flash, and move up until bottom is found
 375:Src/log.c     ****   //or until the top of flash is reached
 376:Src/log.c     ****   while(*current_addr != SENTINEL_MARK_BOTTOM) {
 377:Src/log.c     ****     //printf("Curr: %x\r\n", current_addr);
 378:Src/log.c     ****     current_addr += 2;  //Each data entry has width 128 bits, so add 2
 379:Src/log.c     ****     if(current_addr > top) {
 380:Src/log.c     ****       printf("NOK (find_sentinel_bottom: sentinel not found)\r\n");
 381:Src/log.c     ****       return 0;
 382:Src/log.c     ****     }
 383:Src/log.c     ****   }
 384:Src/log.c     ****   return current_addr;
 385:Src/log.c     **** }
 386:Src/log.c     **** /******************************************************************************/
 387:Src/log.c     **** /****************************Flash Erase***************************************/
 388:Src/log.c     **** /******************************************************************************/
 389:Src/log.c     **** int flash_erase(void) {
 390:Src/log.c     ****   uint32_t FirstPage = 0, NbOfPages = 0, BankNumber = 0;
 391:Src/log.c     ****   uint32_t PAGEError = 0;
 392:Src/log.c     ****   /* __IO uint32_t data32 = 0 , MemoryProgramStatus = 0; */
 393:Src/log.c     **** 
 394:Src/log.c     ****   static FLASH_EraseInitTypeDef EraseInitStruct;
 395:Src/log.c     ****   uint32_t program_end = ((uint32_t )&__fini_array_end
 396:Src/log.c     ****                   + (uint32_t)&_edata
 397:Src/log.c     ****                   - (uint32_t)&_sdata);
 398:Src/log.c     ****   uint32_t bottom  = (((uint32_t)program_end & ~0x7FF) + 0x800);
 399:Src/log.c     ****   uint32_t top = FLASH_END;
 400:Src/log.c     **** 
 401:Src/log.c     ****   HAL_FLASH_Unlock();
 402:Src/log.c     ****   /* Clear OPTVERR bit set on virgin samples */
 403:Src/log.c     ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPTVERR);
 404:Src/log.c     ****   /* Get the 1st page to erase */
 405:Src/log.c     ****   FirstPage = GetPage(bottom);
 406:Src/log.c     ****   /* Get the number of pages to erase from 1st page */
 407:Src/log.c     ****   NbOfPages = GetPage(top) - FirstPage + 1;
 408:Src/log.c     ****   /* Get the bank */
 409:Src/log.c     ****   BankNumber = GetBank(bottom);
 410:Src/log.c     ****   /* Fill EraseInit structure*/
 411:Src/log.c     ****   EraseInitStruct.TypeErase   = FLASH_TYPEERASE_PAGES;
 412:Src/log.c     ****   EraseInitStruct.Banks       = BankNumber;
 413:Src/log.c     ****   EraseInitStruct.Page        = FirstPage;
 414:Src/log.c     ****   EraseInitStruct.NbPages     = NbOfPages;
 415:Src/log.c     **** 
 416:Src/log.c     ****   /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cach
 417:Src/log.c     ****      you have to make sure that these data are rewritten before they are accessed during code
 418:Src/log.c     ****      execution. If this cannot be done safely, it is recommended to flush the caches by setting the
 419:Src/log.c     ****      DCRST and ICRST bits in the FLASH_CR register. */
 420:Src/log.c     ****   if (HAL_FLASHEx_Erase(&EraseInitStruct, &PAGEError) != HAL_OK) {
 421:Src/log.c     ****     HAL_FLASH_Lock();
 422:Src/log.c     ****     return (-1);
 423:Src/log.c     ****   }
 424:Src/log.c     ****   HAL_FLASH_Lock();
 425:Src/log.c     ****   return(0);
 426:Src/log.c     **** }
 427:Src/log.c     **** 
 428:Src/log.c     **** static uint32_t GetPage(uint32_t Addr) {
  29              		.loc 1 428 40 view -0
ARM GAS  /tmp/ccCMQWME.s 			page 9


  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 429:Src/log.c     ****   uint32_t page = 0;
  34              		.loc 1 429 3 view .LVU1
 430:Src/log.c     **** 
 431:Src/log.c     ****   if (Addr < (FLASH_BASE + FLASH_BANK_SIZE))
  35              		.loc 1 431 3 view .LVU2
  36              		.loc 1 431 28 is_stmt 0 view .LVU3
  37 0000 0B4B     		ldr	r3, .L6
  38 0002 1A68     		ldr	r2, [r3]
  39 0004 91B2     		uxth	r1, r2
  40              		.loc 1 431 26 view .LVU4
  41 0006 4FF6FF73 		movw	r3, #65535
  42 000a 9942     		cmp	r1, r3
  43 000c 0AD0     		beq	.L5
  44              		.loc 1 431 28 discriminator 1 view .LVU5
  45 000e 094B     		ldr	r3, .L6+4
  46 0010 03EA8223 		and	r3, r3, r2, lsl #10
  47              		.loc 1 431 26 discriminator 1 view .LVU6
  48 0014 03F10063 		add	r3, r3, #134217728
  49              	.L2:
  50              		.loc 1 431 6 discriminator 4 view .LVU7
  51 0018 8342     		cmp	r3, r0
  52 001a 05D9     		bls	.L3
 432:Src/log.c     ****   {
 433:Src/log.c     ****     /* Bank 1 */
 434:Src/log.c     ****     page = (Addr - FLASH_BASE) / FLASH_PAGE_SIZE;
  53              		.loc 1 434 5 is_stmt 1 view .LVU8
  54              		.loc 1 434 18 is_stmt 0 view .LVU9
  55 001c 00F17840 		add	r0, r0, #-134217728
  56              	.LVL1:
  57              		.loc 1 434 10 view .LVU10
  58 0020 C00A     		lsrs	r0, r0, #11
  59              	.LVL2:
  60              		.loc 1 434 10 view .LVU11
  61 0022 7047     		bx	lr
  62              	.LVL3:
  63              	.L5:
 431:Src/log.c     ****   {
  64              		.loc 1 431 26 view .LVU12
  65 0024 044B     		ldr	r3, .L6+8
  66 0026 F7E7     		b	.L2
  67              	.L3:
 435:Src/log.c     ****   }
 436:Src/log.c     ****   else
 437:Src/log.c     ****   {
 438:Src/log.c     ****     /* Bank 2 */
 439:Src/log.c     ****     page = (Addr - (FLASH_BASE + FLASH_BANK_SIZE)) / FLASH_PAGE_SIZE;
  68              		.loc 1 439 5 is_stmt 1 discriminator 4 view .LVU13
  69              		.loc 1 439 18 is_stmt 0 discriminator 4 view .LVU14
  70 0028 C01A     		subs	r0, r0, r3
  71              	.LVL4:
  72              		.loc 1 439 10 discriminator 4 view .LVU15
  73 002a C00A     		lsrs	r0, r0, #11
  74              	.LVL5:
ARM GAS  /tmp/ccCMQWME.s 			page 10


 440:Src/log.c     ****   }
 441:Src/log.c     **** 
 442:Src/log.c     ****   return page;
  75              		.loc 1 442 3 is_stmt 1 discriminator 4 view .LVU16
 443:Src/log.c     **** }
  76              		.loc 1 443 1 is_stmt 0 discriminator 4 view .LVU17
  77 002c 7047     		bx	lr
  78              	.L7:
  79 002e 00BF     		.align	2
  80              	.L6:
  81 0030 E075FF1F 		.word	536835552
  82 0034 00FCFF03 		.word	67107840
  83 0038 00000408 		.word	134479872
  84              		.cfi_endproc
  85              	.LFE318:
  87              		.section	.text.GetBank,"ax",%progbits
  88              		.align	1
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	GetBank:
  95              	.LVL6:
  96              	.LFB319:
 444:Src/log.c     **** 
 445:Src/log.c     **** static uint32_t GetBank(uint32_t Addr) {
  97              		.loc 1 445 40 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 446:Src/log.c     ****   return FLASH_BANK_1;
 102              		.loc 1 446 3 view .LVU19
 447:Src/log.c     **** }
 103              		.loc 1 447 1 is_stmt 0 view .LVU20
 104 0000 0120     		movs	r0, #1
 105              	.LVL7:
 106              		.loc 1 447 1 view .LVU21
 107 0002 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE319:
 111              		.section	.rodata.print_logs.str1.4,"aMS",%progbits,1
 112              		.align	2
 113              	.LC0:
 114 0000 256D2F25 		.ascii	"%m/%d/%Y,%H:%M:%S\000"
 114      642F2559 
 114      2C25483A 
 114      254D3A25 
 114      5300
 115 0012 0000     		.align	2
 116              	.LC1:
 117 0014 4C2C2564 		.ascii	"L,%d,%s,\000"
 117      2C25732C 
 117      00
 118 001d 000000   		.align	2
 119              	.LC2:
 120 0020 0D00     		.ascii	"\015\000"
ARM GAS  /tmp/ccCMQWME.s 			page 11


 121              		.section	.text.print_logs,"ax",%progbits
 122              		.align	1
 123              		.global	print_logs
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	print_logs:
 130              	.LVL8:
 131              	.LFB309:
  34:Src/log.c     ****   uint64_t* start = fs.data_start;
 132              		.loc 1 34 27 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 72
 135              		@ frame_needed = 0, uses_anonymous_args = 0
  34:Src/log.c     ****   uint64_t* start = fs.data_start;
 136              		.loc 1 34 27 is_stmt 0 view .LVU23
 137 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 138              	.LCFI0:
 139              		.cfi_def_cfa_offset 36
 140              		.cfi_offset 4, -36
 141              		.cfi_offset 5, -32
 142              		.cfi_offset 6, -28
 143              		.cfi_offset 7, -24
 144              		.cfi_offset 8, -20
 145              		.cfi_offset 9, -16
 146              		.cfi_offset 10, -12
 147              		.cfi_offset 11, -8
 148              		.cfi_offset 14, -4
 149 0004 93B0     		sub	sp, sp, #76
 150              	.LCFI1:
 151              		.cfi_def_cfa_offset 112
 152 0006 8046     		mov	r8, r0
  35:Src/log.c     ****   uint64_t* end = fs.next_address;
 153              		.loc 1 35 3 is_stmt 1 view .LVU24
  35:Src/log.c     ****   uint64_t* end = fs.next_address;
 154              		.loc 1 35 13 is_stmt 0 view .LVU25
 155 0008 264B     		ldr	r3, .L21
 156 000a 1C68     		ldr	r4, [r3]
 157              	.LVL9:
  36:Src/log.c     ****   int i = 0;
 158              		.loc 1 36 3 is_stmt 1 view .LVU26
  36:Src/log.c     ****   int i = 0;
 159              		.loc 1 36 13 is_stmt 0 view .LVU27
 160 000c D3F80CA0 		ldr	r10, [r3, #12]
 161              	.LVL10:
  37:Src/log.c     **** 
 162              		.loc 1 37 3 is_stmt 1 view .LVU28
  39:Src/log.c     ****     if(((*start & MASK_STATUS) >> 8) == 2){
 163              		.loc 1 39 3 view .LVU29
  37:Src/log.c     **** 
 164              		.loc 1 37 7 is_stmt 0 view .LVU30
 165 0010 4FF0000B 		mov	fp, #0
  39:Src/log.c     ****     if(((*start & MASK_STATUS) >> 8) == 2){
 166              		.loc 1 39 8 view .LVU31
 167 0014 36E0     		b	.L10
 168              	.LVL11:
ARM GAS  /tmp/ccCMQWME.s 			page 12


 169              	.L20:
 170              	.LBB2:
  41:Src/log.c     ****         break;
 171              		.loc 1 41 7 is_stmt 1 view .LVU32
  41:Src/log.c     ****         break;
 172              		.loc 1 41 9 is_stmt 0 view .LVU33
 173 0016 C345     		cmp	fp, r8
 174 0018 41D0     		beq	.L9
  44:Src/log.c     ****       uint32_t timestamp = (*start & MASK_TIMESTAMP) >> 32;
 175              		.loc 1 44 7 is_stmt 1 view .LVU34
  44:Src/log.c     ****       uint32_t timestamp = (*start & MASK_TIMESTAMP) >> 32;
 176              		.loc 1 44 16 is_stmt 0 view .LVU35
 177 001a 1B0C     		lsrs	r3, r3, #16
 178 001c 0193     		str	r3, [sp, #4]
 179              	.LVL12:
  45:Src/log.c     ****       start--;
 180              		.loc 1 45 7 is_stmt 1 view .LVU36
  45:Src/log.c     ****       start--;
 181              		.loc 1 45 54 is_stmt 0 view .LVU37
 182 001e 3D46     		mov	r5, r7
 183              	.LVL13:
  46:Src/log.c     ****       uint8_t* msg = (uint8_t*) start;
 184              		.loc 1 46 7 is_stmt 1 view .LVU38
  46:Src/log.c     ****       uint8_t* msg = (uint8_t*) start;
 185              		.loc 1 46 12 is_stmt 0 view .LVU39
 186 0020 A4F10809 		sub	r9, r4, #8
 187              	.LVL14:
  47:Src/log.c     ****       start--;      
 188              		.loc 1 47 7 is_stmt 1 view .LVU40
  48:Src/log.c     **** 
 189              		.loc 1 48 7 view .LVU41
  48:Src/log.c     **** 
 190              		.loc 1 48 12 is_stmt 0 view .LVU42
 191 0024 103C     		subs	r4, r4, #16
 192              	.LVL15:
  50:Src/log.c     ****       struct tm ts;
 193              		.loc 1 50 7 is_stmt 1 view .LVU43
  50:Src/log.c     ****       struct tm ts;
 194              		.loc 1 50 14 is_stmt 0 view .LVU44
 195 0026 0292     		str	r2, [sp, #8]
 196 0028 0397     		str	r7, [sp, #12]
  51:Src/log.c     ****       char time[20];
 197              		.loc 1 51 7 is_stmt 1 view .LVU45
  52:Src/log.c     **** 
 198              		.loc 1 52 7 view .LVU46
  54:Src/log.c     ****       strftime(time, sizeof(time), "%m/%d/%Y,%H:%M:%S", &ts);
 199              		.loc 1 54 7 view .LVU47
  54:Src/log.c     ****       strftime(time, sizeof(time), "%m/%d/%Y,%H:%M:%S", &ts);
 200              		.loc 1 54 13 is_stmt 0 view .LVU48
 201 002a 02A8     		add	r0, sp, #8
 202 002c FFF7FEFF 		bl	localtime
 203              	.LVL16:
  54:Src/log.c     ****       strftime(time, sizeof(time), "%m/%d/%Y,%H:%M:%S", &ts);
 204              		.loc 1 54 10 view .LVU49
 205 0030 0DF1240E 		add	lr, sp, #36
 206 0034 8446     		mov	ip, r0
 207 0036 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccCMQWME.s 			page 13


 208 003a AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 209 003e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 210 0042 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 211 0046 DCF80030 		ldr	r3, [ip]
 212 004a CEF80030 		str	r3, [lr]
  55:Src/log.c     **** 
 213              		.loc 1 55 7 is_stmt 1 view .LVU50
 214 004e 09AB     		add	r3, sp, #36
 215 0050 154A     		ldr	r2, .L21+4
 216 0052 1421     		movs	r1, #20
 217 0054 04A8     		add	r0, sp, #16
 218 0056 FFF7FEFF 		bl	strftime
 219              	.LVL17:
  57:Src/log.c     **** 
 220              		.loc 1 57 7 view .LVU51
 221 005a 04AA     		add	r2, sp, #16
 222 005c 0199     		ldr	r1, [sp, #4]
 223 005e 1348     		ldr	r0, .L21+8
 224 0060 FFF7FEFF 		bl	printf
 225              	.LVL18:
  59:Src/log.c     ****         printf("%c", msg[i]);
 226              		.loc 1 59 7 view .LVU52
 227              	.LBB3:
  59:Src/log.c     ****         printf("%c", msg[i]);
 228              		.loc 1 59 11 view .LVU53
  59:Src/log.c     ****         printf("%c", msg[i]);
 229              		.loc 1 59 7 is_stmt 0 view .LVU54
 230 0064 02E0     		b	.L13
 231              	.LVL19:
 232              	.L14:
  60:Src/log.c     ****       }
 233              		.loc 1 60 9 is_stmt 1 discriminator 3 view .LVU55
 234 0066 FFF7FEFF 		bl	putchar
 235              	.LVL20:
  59:Src/log.c     ****         printf("%c", msg[i]);
 236              		.loc 1 59 38 discriminator 3 view .LVU56
  59:Src/log.c     ****         printf("%c", msg[i]);
 237              		.loc 1 59 39 is_stmt 0 discriminator 3 view .LVU57
 238 006a 0135     		adds	r5, r5, #1
 239              	.LVL21:
 240              	.L13:
  59:Src/log.c     ****         printf("%c", msg[i]);
 241              		.loc 1 59 22 is_stmt 1 discriminator 1 view .LVU58
  59:Src/log.c     ****         printf("%c", msg[i]);
 242              		.loc 1 59 25 is_stmt 0 discriminator 1 view .LVU59
 243 006c 19F80500 		ldrb	r0, [r9, r5]	@ zero_extendqisi2
  59:Src/log.c     ****         printf("%c", msg[i]);
 244              		.loc 1 59 7 discriminator 1 view .LVU60
 245 0070 0028     		cmp	r0, #0
 246 0072 F8D1     		bne	.L14
 247              	.LBE3:
  63:Src/log.c     **** 
 248              		.loc 1 63 7 is_stmt 1 view .LVU61
 249 0074 0E48     		ldr	r0, .L21+12
 250 0076 FFF7FEFF 		bl	puts
 251              	.LVL22:
  65:Src/log.c     ****         i++;
ARM GAS  /tmp/ccCMQWME.s 			page 14


 252              		.loc 1 65 7 view .LVU62
  65:Src/log.c     ****         i++;
 253              		.loc 1 65 9 is_stmt 0 view .LVU63
 254 007a B8F1000F 		cmp	r8, #0
 255 007e 01DD     		ble	.L10
  66:Src/log.c     ****     } else {
 256              		.loc 1 66 9 is_stmt 1 view .LVU64
  66:Src/log.c     ****     } else {
 257              		.loc 1 66 10 is_stmt 0 view .LVU65
 258 0080 0BF1010B 		add	fp, fp, #1
 259              	.LVL23:
 260              	.L10:
  66:Src/log.c     ****     } else {
 261              		.loc 1 66 10 view .LVU66
 262              	.LBE2:
  39:Src/log.c     ****     if(((*start & MASK_STATUS) >> 8) == 2){
 263              		.loc 1 39 8 is_stmt 1 view .LVU67
 264 0084 5445     		cmp	r4, r10
 265 0086 0AD9     		bls	.L9
  40:Src/log.c     ****       if(i == count) 
 266              		.loc 1 40 5 view .LVU68
  40:Src/log.c     ****       if(i == count) 
 267              		.loc 1 40 10 is_stmt 0 view .LVU69
 268 0088 2368     		ldr	r3, [r4]
 269 008a 6268     		ldr	r2, [r4, #4]
  40:Src/log.c     ****       if(i == count) 
 270              		.loc 1 40 32 view .LVU70
 271 008c C3F30726 		ubfx	r6, r3, #8, #8
 272 0090 0027     		movs	r7, #0
  40:Src/log.c     ****       if(i == count) 
 273              		.loc 1 40 7 view .LVU71
 274 0092 002F     		cmp	r7, #0
 275 0094 08BF     		it	eq
 276 0096 022E     		cmpeq	r6, #2
 277 0098 BDD0     		beq	.L20
  68:Src/log.c     ****     }
 278              		.loc 1 68 7 is_stmt 1 view .LVU72
  68:Src/log.c     ****     }
 279              		.loc 1 68 13 is_stmt 0 view .LVU73
 280 009a 103C     		subs	r4, r4, #16
 281              	.LVL24:
  68:Src/log.c     ****     }
 282              		.loc 1 68 13 view .LVU74
 283 009c F2E7     		b	.L10
 284              	.L9:
  71:Src/log.c     **** 
 285              		.loc 1 71 1 view .LVU75
 286 009e 13B0     		add	sp, sp, #76
 287              	.LCFI2:
 288              		.cfi_def_cfa_offset 36
 289              		@ sp needed
 290 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 291              	.LVL25:
 292              	.L22:
  71:Src/log.c     **** 
 293              		.loc 1 71 1 view .LVU76
 294              		.align	2
ARM GAS  /tmp/ccCMQWME.s 			page 15


 295              	.L21:
 296 00a4 00000000 		.word	fs
 297 00a8 00000000 		.word	.LC0
 298 00ac 14000000 		.word	.LC1
 299 00b0 20000000 		.word	.LC2
 300              		.cfi_endproc
 301              	.LFE309:
 303              		.section	.rodata.print_data.str1.4,"aMS",%progbits,1
 304              		.align	2
 305              	.LC3:
 306 0000 442C2564 		.ascii	"D,%d,%s,%d.%d,%d,%d.%d\015\012\000"
 306      2C25732C 
 306      25642E25 
 306      642C2564 
 306      2C25642E 
 307              		.section	.text.print_data,"ax",%progbits
 308              		.align	1
 309              		.global	print_data
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 313              		.fpu fpv4-sp-d16
 315              	print_data:
 316              	.LVL26:
 317              	.LFB310:
  83:Src/log.c     ****   uint64_t* start = fs.data_start;
 318              		.loc 1 83 27 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 80
 321              		@ frame_needed = 0, uses_anonymous_args = 0
  83:Src/log.c     ****   uint64_t* start = fs.data_start;
 322              		.loc 1 83 27 is_stmt 0 view .LVU78
 323 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 324              	.LCFI3:
 325              		.cfi_def_cfa_offset 36
 326              		.cfi_offset 4, -36
 327              		.cfi_offset 5, -32
 328              		.cfi_offset 6, -28
 329              		.cfi_offset 7, -24
 330              		.cfi_offset 8, -20
 331              		.cfi_offset 9, -16
 332              		.cfi_offset 10, -12
 333              		.cfi_offset 11, -8
 334              		.cfi_offset 14, -4
 335 0004 99B0     		sub	sp, sp, #100
 336              	.LCFI4:
 337              		.cfi_def_cfa_offset 136
 338 0006 0690     		str	r0, [sp, #24]
  84:Src/log.c     ****   uint64_t* end = fs.next_address;
 339              		.loc 1 84 3 is_stmt 1 view .LVU79
  84:Src/log.c     ****   uint64_t* end = fs.next_address;
 340              		.loc 1 84 13 is_stmt 0 view .LVU80
 341 0008 304B     		ldr	r3, .L32
 342 000a 1C68     		ldr	r4, [r3]
 343              	.LVL27:
  85:Src/log.c     ****   int i = 0;
 344              		.loc 1 85 3 is_stmt 1 view .LVU81
ARM GAS  /tmp/ccCMQWME.s 			page 16


  85:Src/log.c     ****   int i = 0;
 345              		.loc 1 85 13 is_stmt 0 view .LVU82
 346 000c D3F80C80 		ldr	r8, [r3, #12]
 347              	.LVL28:
  86:Src/log.c     ****   
 348              		.loc 1 86 3 is_stmt 1 view .LVU83
  88:Src/log.c     ****     if(((*start & MASK_STATUS) >> 8) == 1){
 349              		.loc 1 88 3 view .LVU84
  86:Src/log.c     ****   
 350              		.loc 1 86 7 is_stmt 0 view .LVU85
 351 0010 0023     		movs	r3, #0
 352 0012 0593     		str	r3, [sp, #20]
  88:Src/log.c     ****     if(((*start & MASK_STATUS) >> 8) == 1){
 353              		.loc 1 88 8 view .LVU86
 354 0014 00E0     		b	.L24
 355              	.LVL29:
 356              	.L25:
 114:Src/log.c     ****     }
 357              		.loc 1 114 7 is_stmt 1 view .LVU87
 114:Src/log.c     ****     }
 358              		.loc 1 114 13 is_stmt 0 view .LVU88
 359 0016 103C     		subs	r4, r4, #16
 360              	.LVL30:
 361              	.L24:
  88:Src/log.c     ****     if(((*start & MASK_STATUS) >> 8) == 1){
 362              		.loc 1 88 8 is_stmt 1 view .LVU89
 363 0018 4445     		cmp	r4, r8
 364 001a 53D9     		bls	.L23
  89:Src/log.c     ****       if(i == count)
 365              		.loc 1 89 5 view .LVU90
  89:Src/log.c     ****       if(i == count)
 366              		.loc 1 89 10 is_stmt 0 view .LVU91
 367 001c 2668     		ldr	r6, [r4]
 368 001e 6368     		ldr	r3, [r4, #4]
  89:Src/log.c     ****       if(i == count)
 369              		.loc 1 89 32 view .LVU92
 370 0020 C6F3072A 		ubfx	r10, r6, #8, #8
 371 0024 4FF0000B 		mov	fp, #0
  89:Src/log.c     ****       if(i == count)
 372              		.loc 1 89 7 view .LVU93
 373 0028 BBF1000F 		cmp	fp, #0
 374 002c 08BF     		it	eq
 375 002e BAF1010F 		cmpeq	r10, #1
 376 0032 F0D1     		bne	.L25
 377              	.LBB4:
  90:Src/log.c     ****         break;
 378              		.loc 1 90 7 is_stmt 1 view .LVU94
  90:Src/log.c     ****         break;
 379              		.loc 1 90 9 is_stmt 0 view .LVU95
 380 0034 059A     		ldr	r2, [sp, #20]
 381 0036 0699     		ldr	r1, [sp, #24]
 382 0038 8A42     		cmp	r2, r1
 383 003a 43D0     		beq	.L23
  93:Src/log.c     ****       uint32_t timestamp = (*start & MASK_TIMESTAMP) >> 32;
 384              		.loc 1 93 7 is_stmt 1 view .LVU96
  93:Src/log.c     ****       uint32_t timestamp = (*start & MASK_TIMESTAMP) >> 32;
 385              		.loc 1 93 16 is_stmt 0 view .LVU97
ARM GAS  /tmp/ccCMQWME.s 			page 17


 386 003c 300C     		lsrs	r0, r6, #16
 387 003e 0790     		str	r0, [sp, #28]
 388              	.LVL31:
  94:Src/log.c     ****       start--;
 389              		.loc 1 94 7 is_stmt 1 view .LVU98
  95:Src/log.c     ****       uint16_t voltage = *start & MASK_VOLTAGE;
 390              		.loc 1 95 7 view .LVU99
  96:Src/log.c     ****       int16_t temperature = (*start & MASK_TEMPERATURE) >> 16;
 391              		.loc 1 96 7 view .LVU100
  96:Src/log.c     ****       int16_t temperature = (*start & MASK_TEMPERATURE) >> 16;
 392              		.loc 1 96 26 is_stmt 0 view .LVU101
 393 0040 54F8082C 		ldr	r2, [r4, #-8]
 394 0044 54F8047C 		ldr	r7, [r4, #-4]
  96:Src/log.c     ****       int16_t temperature = (*start & MASK_TEMPERATURE) >> 16;
 395              		.loc 1 96 16 view .LVU102
 396 0048 1FFA82F9 		uxth	r9, r2
 397              	.LVL32:
  97:Src/log.c     ****       uint32_t period = (*start & MASK_SENSOR_PERIOD) >> 32;
 398              		.loc 1 97 7 is_stmt 1 view .LVU103
  97:Src/log.c     ****       uint32_t period = (*start & MASK_SENSOR_PERIOD) >> 32;
 399              		.loc 1 97 15 is_stmt 0 view .LVU104
 400 004c 1614     		asrs	r6, r2, #16
 401              	.LVL33:
  98:Src/log.c     ****       start--;
 402              		.loc 1 98 7 is_stmt 1 view .LVU105
  99:Src/log.c     **** 
 403              		.loc 1 99 7 view .LVU106
  99:Src/log.c     **** 
 404              		.loc 1 99 12 is_stmt 0 view .LVU107
 405 004e 103C     		subs	r4, r4, #16
 406              	.LVL34:
 101:Src/log.c     ****       struct tm ts;
 407              		.loc 1 101 7 is_stmt 1 view .LVU108
 101:Src/log.c     ****       struct tm ts;
 408              		.loc 1 101 14 is_stmt 0 view .LVU109
 409 0050 0893     		str	r3, [sp, #32]
 410 0052 CDF824B0 		str	fp, [sp, #36]
 102:Src/log.c     ****       char time[20];
 411              		.loc 1 102 7 is_stmt 1 view .LVU110
 103:Src/log.c     **** 
 412              		.loc 1 103 7 view .LVU111
 105:Src/log.c     ****       strftime(time, sizeof(time), "%m/%d/%Y,%H:%M:%S", &ts);
 413              		.loc 1 105 7 view .LVU112
 105:Src/log.c     ****       strftime(time, sizeof(time), "%m/%d/%Y,%H:%M:%S", &ts);
 414              		.loc 1 105 13 is_stmt 0 view .LVU113
 415 0056 08A8     		add	r0, sp, #32
 416 0058 FFF7FEFF 		bl	localtime
 417              	.LVL35:
 105:Src/log.c     ****       strftime(time, sizeof(time), "%m/%d/%Y,%H:%M:%S", &ts);
 418              		.loc 1 105 10 view .LVU114
 419 005c 0DF13C0C 		add	ip, sp, #60
 420 0060 0546     		mov	r5, r0
 421 0062 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 422 0064 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 423 0068 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 424 006a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 425 006e 2B68     		ldr	r3, [r5]
ARM GAS  /tmp/ccCMQWME.s 			page 18


 426 0070 CCF80030 		str	r3, [ip]
 106:Src/log.c     **** 
 427              		.loc 1 106 7 is_stmt 1 view .LVU115
 428 0074 0FAB     		add	r3, sp, #60
 429 0076 164A     		ldr	r2, .L32+4
 430 0078 1421     		movs	r1, #20
 431 007a 0AA8     		add	r0, sp, #40
 432 007c FFF7FEFF 		bl	strftime
 433              	.LVL36:
 108:Src/log.c     ****                                            (int)voltage%1000, (int)temperature, 
 434              		.loc 1 108 7 view .LVU116
 435 0080 1448     		ldr	r0, .L32+8
 436 0082 A0FB0953 		umull	r5, r3, r0, r9
 437 0086 9A09     		lsrs	r2, r3, #6
 438 0088 80FB0750 		smull	r5, r0, r0, r7
 439 008c F917     		asrs	r1, r7, #31
 440 008e C1EBA011 		rsb	r1, r1, r0, asr #6
 441 0092 4FF47A70 		mov	r0, #1000
 442 0096 00FB1177 		mls	r7, r0, r1, r7
 443              	.LVL37:
 108:Src/log.c     ****                                            (int)voltage%1000, (int)temperature, 
 444              		.loc 1 108 7 is_stmt 0 view .LVU117
 445 009a 0397     		str	r7, [sp, #12]
 446 009c 0291     		str	r1, [sp, #8]
 447 009e 0196     		str	r6, [sp, #4]
 448 00a0 00FB1292 		mls	r2, r0, r2, r9
 449 00a4 92B2     		uxth	r2, r2
 450 00a6 0092     		str	r2, [sp]
 451 00a8 9B09     		lsrs	r3, r3, #6
 452 00aa 0AAD     		add	r5, sp, #40
 453 00ac 2A46     		mov	r2, r5
 454 00ae 0799     		ldr	r1, [sp, #28]
 455 00b0 0948     		ldr	r0, .L32+12
 456 00b2 FFF7FEFF 		bl	printf
 457              	.LVL38:
 111:Src/log.c     ****         i++;
 458              		.loc 1 111 7 is_stmt 1 view .LVU118
 111:Src/log.c     ****         i++;
 459              		.loc 1 111 9 is_stmt 0 view .LVU119
 460 00b6 0699     		ldr	r1, [sp, #24]
 461 00b8 5945     		cmp	r1, fp
 462 00ba ADDD     		ble	.L24
 112:Src/log.c     ****     } else {
 463              		.loc 1 112 9 is_stmt 1 view .LVU120
 112:Src/log.c     ****     } else {
 464              		.loc 1 112 10 is_stmt 0 view .LVU121
 465 00bc 059A     		ldr	r2, [sp, #20]
 466 00be 0132     		adds	r2, r2, #1
 467 00c0 0592     		str	r2, [sp, #20]
 468              	.LVL39:
 112:Src/log.c     ****     } else {
 469              		.loc 1 112 10 view .LVU122
 470 00c2 A9E7     		b	.L24
 471              	.LVL40:
 472              	.L23:
 112:Src/log.c     ****     } else {
 473              		.loc 1 112 10 view .LVU123
ARM GAS  /tmp/ccCMQWME.s 			page 19


 474              	.LBE4:
 118:Src/log.c     **** 
 475              		.loc 1 118 1 view .LVU124
 476 00c4 19B0     		add	sp, sp, #100
 477              	.LCFI5:
 478              		.cfi_def_cfa_offset 36
 479              		@ sp needed
 480 00c6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 481              	.LVL41:
 482              	.L33:
 118:Src/log.c     **** 
 483              		.loc 1 118 1 view .LVU125
 484 00ca 00BF     		.align	2
 485              	.L32:
 486 00cc 00000000 		.word	fs
 487 00d0 00000000 		.word	.LC0
 488 00d4 D34D6210 		.word	274877907
 489 00d8 00000000 		.word	.LC3
 490              		.cfi_endproc
 491              	.LFE310:
 493              		.section	.rodata.write_sentinel.str1.4,"aMS",%progbits,1
 494              		.align	2
 495              	.LC4:
 496 0000 53656E74 		.ascii	"Sentinel or address is not set\015\000"
 496      696E656C 
 496      206F7220 
 496      61646472 
 496      65737320 
 497              		.align	2
 498              	.LC5:
 499 0020 4E4F4B20 		.ascii	"NOK (write_sentinel: raw0)\015\000"
 499      28777269 
 499      74655F73 
 499      656E7469 
 499      6E656C3A 
 500              		.align	2
 501              	.LC6:
 502 003c 4E4F4B20 		.ascii	"NOK (write_sentinel: raw1)\015\000"
 502      28777269 
 502      74655F73 
 502      656E7469 
 502      6E656C3A 
 503              		.section	.text.write_sentinel,"ax",%progbits
 504              		.align	1
 505              		.global	write_sentinel
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 509              		.fpu fpv4-sp-d16
 511              	write_sentinel:
 512              	.LVL42:
 513              	.LFB313:
 205:Src/log.c     ****   HAL_StatusTypeDef err_status;
 514              		.loc 1 205 60 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccCMQWME.s 			page 20


 205:Src/log.c     ****   HAL_StatusTypeDef err_status;
 518              		.loc 1 205 60 is_stmt 0 view .LVU127
 519 0000 38B5     		push	{r3, r4, r5, lr}
 520              	.LCFI6:
 521              		.cfi_def_cfa_offset 16
 522              		.cfi_offset 3, -16
 523              		.cfi_offset 4, -12
 524              		.cfi_offset 5, -8
 525              		.cfi_offset 14, -4
 206:Src/log.c     ****   uint64_t *write_address;
 526              		.loc 1 206 3 is_stmt 1 view .LVU128
 207:Src/log.c     ****   //error checking
 527              		.loc 1 207 3 view .LVU129
 209:Src/log.c     ****     printf("Sentinel or address is not set\r\n");
 528              		.loc 1 209 3 view .LVU130
 209:Src/log.c     ****     printf("Sentinel or address is not set\r\n");
 529              		.loc 1 209 5 is_stmt 0 view .LVU131
 530 0002 B9B1     		cbz	r1, .L35
 531 0004 0446     		mov	r4, r0
 532 0006 0D46     		mov	r5, r1
 209:Src/log.c     ****     printf("Sentinel or address is not set\r\n");
 533              		.loc 1 209 16 discriminator 1 view .LVU132
 534 0008 A0B1     		cbz	r0, .L35
 214:Src/log.c     **** 
 535              		.loc 1 214 3 is_stmt 1 view .LVU133
 536              	.LVL43:
 216:Src/log.c     ****   err_status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (uint32_t) write_address, sentinel->
 537              		.loc 1 216 3 view .LVU134
 538 000a FFF7FEFF 		bl	HAL_FLASH_Unlock
 539              	.LVL44:
 217:Src/log.c     ****   if (err_status) {
 540              		.loc 1 217 3 view .LVU135
 217:Src/log.c     ****   if (err_status) {
 541              		.loc 1 217 16 is_stmt 0 view .LVU136
 542 000e D5E90023 		ldrd	r2, [r5]
 543 0012 2146     		mov	r1, r4
 544 0014 0020     		movs	r0, #0
 545 0016 FFF7FEFF 		bl	HAL_FLASH_Program
 546              	.LVL45:
 218:Src/log.c     ****     HAL_FLASH_Lock();
 547              		.loc 1 218 3 is_stmt 1 view .LVU137
 218:Src/log.c     ****     HAL_FLASH_Lock();
 548              		.loc 1 218 6 is_stmt 0 view .LVU138
 549 001a 88B9     		cbnz	r0, .L41
 223:Src/log.c     ****   err_status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (uint32_t) write_address, sentinel->
 550              		.loc 1 223 3 is_stmt 1 view .LVU139
 551              	.LVL46:
 224:Src/log.c     ****   if (err_status) {
 552              		.loc 1 224 3 view .LVU140
 224:Src/log.c     ****   if (err_status) {
 553              		.loc 1 224 16 is_stmt 0 view .LVU141
 554 001c D5E90223 		ldrd	r2, [r5, #8]
 555 0020 A4F10801 		sub	r1, r4, #8
 556              	.LVL47:
 224:Src/log.c     ****   if (err_status) {
 557              		.loc 1 224 16 view .LVU142
 558 0024 0020     		movs	r0, #0
ARM GAS  /tmp/ccCMQWME.s 			page 21


 559              	.LVL48:
 224:Src/log.c     ****   if (err_status) {
 560              		.loc 1 224 16 view .LVU143
 561 0026 FFF7FEFF 		bl	HAL_FLASH_Program
 562              	.LVL49:
 225:Src/log.c     ****     HAL_FLASH_Lock();
 563              		.loc 1 225 3 is_stmt 1 view .LVU144
 225:Src/log.c     ****     HAL_FLASH_Lock();
 564              		.loc 1 225 6 is_stmt 0 view .LVU145
 565 002a 0446     		mov	r4, r0
 566              	.LVL50:
 225:Src/log.c     ****     HAL_FLASH_Lock();
 567              		.loc 1 225 6 view .LVU146
 568 002c 78B9     		cbnz	r0, .L42
 230:Src/log.c     **** 
 569              		.loc 1 230 3 is_stmt 1 view .LVU147
 570 002e FFF7FEFF 		bl	HAL_FLASH_Lock
 571              	.LVL51:
 232:Src/log.c     **** }
 572              		.loc 1 232 3 view .LVU148
 232:Src/log.c     **** }
 573              		.loc 1 232 10 is_stmt 0 view .LVU149
 574 0032 03E0     		b	.L37
 575              	.LVL52:
 576              	.L35:
 210:Src/log.c     ****     return 1;
 577              		.loc 1 210 5 is_stmt 1 view .LVU150
 578 0034 0948     		ldr	r0, .L43
 579              	.LVL53:
 210:Src/log.c     ****     return 1;
 580              		.loc 1 210 5 is_stmt 0 view .LVU151
 581 0036 FFF7FEFF 		bl	puts
 582              	.LVL54:
 211:Src/log.c     ****   }
 583              		.loc 1 211 5 is_stmt 1 view .LVU152
 211:Src/log.c     ****   }
 584              		.loc 1 211 12 is_stmt 0 view .LVU153
 585 003a 0124     		movs	r4, #1
 586              	.L37:
 233:Src/log.c     **** 
 587              		.loc 1 233 1 view .LVU154
 588 003c 2046     		mov	r0, r4
 589 003e 38BD     		pop	{r3, r4, r5, pc}
 590              	.LVL55:
 591              	.L41:
 219:Src/log.c     ****     printf("NOK (write_sentinel: raw0)\r\n");
 592              		.loc 1 219 5 is_stmt 1 view .LVU155
 593 0040 FFF7FEFF 		bl	HAL_FLASH_Lock
 594              	.LVL56:
 220:Src/log.c     ****     return 1;
 595              		.loc 1 220 5 view .LVU156
 596 0044 0648     		ldr	r0, .L43+4
 597 0046 FFF7FEFF 		bl	puts
 598              	.LVL57:
 221:Src/log.c     ****   }
 599              		.loc 1 221 5 view .LVU157
 221:Src/log.c     ****   }
ARM GAS  /tmp/ccCMQWME.s 			page 22


 600              		.loc 1 221 12 is_stmt 0 view .LVU158
 601 004a 0124     		movs	r4, #1
 602              	.LVL58:
 221:Src/log.c     ****   }
 603              		.loc 1 221 12 view .LVU159
 604 004c F6E7     		b	.L37
 605              	.LVL59:
 606              	.L42:
 226:Src/log.c     ****     printf("NOK (write_sentinel: raw1)\r\n");
 607              		.loc 1 226 5 is_stmt 1 view .LVU160
 608 004e FFF7FEFF 		bl	HAL_FLASH_Lock
 609              	.LVL60:
 227:Src/log.c     ****     return 1;
 610              		.loc 1 227 5 view .LVU161
 611 0052 0448     		ldr	r0, .L43+8
 612 0054 FFF7FEFF 		bl	puts
 613              	.LVL61:
 228:Src/log.c     ****   }
 614              		.loc 1 228 5 view .LVU162
 228:Src/log.c     ****   }
 615              		.loc 1 228 12 is_stmt 0 view .LVU163
 616 0058 0124     		movs	r4, #1
 617 005a EFE7     		b	.L37
 618              	.L44:
 619              		.align	2
 620              	.L43:
 621 005c 00000000 		.word	.LC4
 622 0060 20000000 		.word	.LC5
 623 0064 3C000000 		.word	.LC6
 624              		.cfi_endproc
 625              	.LFE313:
 627              		.section	.rodata.write_record.str1.4,"aMS",%progbits,1
 628              		.align	2
 629              	.LC7:
 630 0000 4E4F4B20 		.ascii	"NOK (write_record: flash_full)\015\000"
 630      28777269 
 630      74655F72 
 630      65636F72 
 630      643A2066 
 631              		.align	2
 632              	.LC8:
 633 0020 4E4F4B20 		.ascii	"NOK (write_record: first flash)\015\000"
 633      28777269 
 633      74655F72 
 633      65636F72 
 633      643A2066 
 634 0041 000000   		.align	2
 635              	.LC9:
 636 0044 4E4F4B20 		.ascii	"NOK (write_record: second flash)\015\000"
 636      28777269 
 636      74655F72 
 636      65636F72 
 636      643A2073 
 637              		.section	.text.write_record,"ax",%progbits
 638              		.align	1
 639              		.global	write_record
 640              		.syntax unified
ARM GAS  /tmp/ccCMQWME.s 			page 23


 641              		.thumb
 642              		.thumb_func
 643              		.fpu fpv4-sp-d16
 645              	write_record:
 646              	.LVL62:
 647              	.LFB314:
 236:Src/log.c     ****   raw_t *write_data;
 648              		.loc 1 236 36 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 236:Src/log.c     ****   raw_t *write_data;
 652              		.loc 1 236 36 is_stmt 0 view .LVU165
 653 0000 38B5     		push	{r3, r4, r5, lr}
 654              	.LCFI7:
 655              		.cfi_def_cfa_offset 16
 656              		.cfi_offset 3, -16
 657              		.cfi_offset 4, -12
 658              		.cfi_offset 5, -8
 659              		.cfi_offset 14, -4
 237:Src/log.c     ****   HAL_StatusTypeDef err_status=0;
 660              		.loc 1 237 3 is_stmt 1 view .LVU166
 238:Src/log.c     **** 
 661              		.loc 1 238 3 view .LVU167
 662              	.LVL63:
 241:Src/log.c     ****     return 1;
 663              		.loc 1 241 3 view .LVU168
 241:Src/log.c     ****     return 1;
 664              		.loc 1 241 5 is_stmt 0 view .LVU169
 665 0002 0028     		cmp	r0, #0
 666 0004 3BD0     		beq	.L50
 667 0006 0446     		mov	r4, r0
 244:Src/log.c     ****     printf("NOK (write_record: flash_full)\r\n");
 668              		.loc 1 244 3 is_stmt 1 view .LVU170
 244:Src/log.c     ****     printf("NOK (write_record: flash_full)\r\n");
 669              		.loc 1 244 8 is_stmt 0 view .LVU171
 670 0008 1E4B     		ldr	r3, .L55
 671 000a 5A68     		ldr	r2, [r3, #4]
 244:Src/log.c     ****     printf("NOK (write_record: flash_full)\r\n");
 672              		.loc 1 244 28 view .LVU172
 673 000c 9B68     		ldr	r3, [r3, #8]
 244:Src/log.c     ****     printf("NOK (write_record: flash_full)\r\n");
 674              		.loc 1 244 5 view .LVU173
 675 000e 9A42     		cmp	r2, r3
 676 0010 21D2     		bcs	.L52
 249:Src/log.c     **** 
 677              		.loc 1 249 3 is_stmt 1 view .LVU174
 678              	.LVL64:
 251:Src/log.c     ****   err_status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (uint32_t) fs.next_address, write_da
 679              		.loc 1 251 3 view .LVU175
 680 0012 FFF7FEFF 		bl	HAL_FLASH_Unlock
 681              	.LVL65:
 252:Src/log.c     ****   if (err_status) {
 682              		.loc 1 252 3 view .LVU176
 252:Src/log.c     ****   if (err_status) {
 683              		.loc 1 252 16 is_stmt 0 view .LVU177
 684 0016 D4E90023 		ldrd	r2, [r4]
ARM GAS  /tmp/ccCMQWME.s 			page 24


 685 001a 1A49     		ldr	r1, .L55
 686 001c C968     		ldr	r1, [r1, #12]
 687 001e 0020     		movs	r0, #0
 688 0020 FFF7FEFF 		bl	HAL_FLASH_Program
 689              	.LVL66:
 253:Src/log.c     ****     printf("NOK (write_record: first flash)\r\n");
 690              		.loc 1 253 3 is_stmt 1 view .LVU178
 253:Src/log.c     ****     printf("NOK (write_record: first flash)\r\n");
 691              		.loc 1 253 6 is_stmt 0 view .LVU179
 692 0024 E8B9     		cbnz	r0, .L53
 258:Src/log.c     ****   err_status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (uint32_t) fs.next_address, write_da
 693              		.loc 1 258 3 is_stmt 1 view .LVU180
 258:Src/log.c     ****   err_status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (uint32_t) fs.next_address, write_da
 694              		.loc 1 258 5 is_stmt 0 view .LVU181
 695 0026 174B     		ldr	r3, .L55
 696 0028 D968     		ldr	r1, [r3, #12]
 258:Src/log.c     ****   err_status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (uint32_t) fs.next_address, write_da
 697              		.loc 1 258 18 view .LVU182
 698 002a 0839     		subs	r1, r1, #8
 699 002c D960     		str	r1, [r3, #12]
 259:Src/log.c     ****   if (err_status) {
 700              		.loc 1 259 3 is_stmt 1 view .LVU183
 259:Src/log.c     ****   if (err_status) {
 701              		.loc 1 259 16 is_stmt 0 view .LVU184
 702 002e D4E90223 		ldrd	r2, [r4, #8]
 703 0032 0020     		movs	r0, #0
 704              	.LVL67:
 259:Src/log.c     ****   if (err_status) {
 705              		.loc 1 259 16 view .LVU185
 706 0034 FFF7FEFF 		bl	HAL_FLASH_Program
 707              	.LVL68:
 260:Src/log.c     ****     printf("NOK (write_record: second flash)\r\n");
 708              		.loc 1 260 3 is_stmt 1 view .LVU186
 260:Src/log.c     ****     printf("NOK (write_record: second flash)\r\n");
 709              		.loc 1 260 6 is_stmt 0 view .LVU187
 710 0038 0446     		mov	r4, r0
 711              	.LVL69:
 260:Src/log.c     ****     printf("NOK (write_record: second flash)\r\n");
 712              		.loc 1 260 6 view .LVU188
 713 003a C8B9     		cbnz	r0, .L54
 265:Src/log.c     ****   HAL_FLASH_Lock();
 714              		.loc 1 265 3 is_stmt 1 view .LVU189
 265:Src/log.c     ****   HAL_FLASH_Lock();
 715              		.loc 1 265 5 is_stmt 0 view .LVU190
 716 003c 114D     		ldr	r5, .L55
 717 003e EB68     		ldr	r3, [r5, #12]
 265:Src/log.c     ****   HAL_FLASH_Lock();
 718              		.loc 1 265 18 view .LVU191
 719 0040 083B     		subs	r3, r3, #8
 720 0042 EB60     		str	r3, [r5, #12]
 266:Src/log.c     ****   //update fs
 721              		.loc 1 266 3 is_stmt 1 view .LVU192
 722 0044 FFF7FEFF 		bl	HAL_FLASH_Lock
 723              	.LVL70:
 268:Src/log.c     ****   fs.total_records++;
 724              		.loc 1 268 3 view .LVU193
 268:Src/log.c     ****   fs.total_records++;
ARM GAS  /tmp/ccCMQWME.s 			page 25


 725              		.loc 1 268 5 is_stmt 0 view .LVU194
 726 0048 2B69     		ldr	r3, [r5, #16]
 268:Src/log.c     ****   fs.total_records++;
 727              		.loc 1 268 24 view .LVU195
 728 004a 0133     		adds	r3, r3, #1
 729 004c 2B61     		str	r3, [r5, #16]
 269:Src/log.c     **** 
 730              		.loc 1 269 3 is_stmt 1 view .LVU196
 269:Src/log.c     **** 
 731              		.loc 1 269 5 is_stmt 0 view .LVU197
 732 004e 6B68     		ldr	r3, [r5, #4]
 269:Src/log.c     **** 
 733              		.loc 1 269 19 view .LVU198
 734 0050 0133     		adds	r3, r3, #1
 735 0052 6B60     		str	r3, [r5, #4]
 271:Src/log.c     **** }
 736              		.loc 1 271 3 is_stmt 1 view .LVU199
 271:Src/log.c     **** }
 737              		.loc 1 271 10 is_stmt 0 view .LVU200
 738 0054 03E0     		b	.L46
 739              	.LVL71:
 740              	.L52:
 245:Src/log.c     ****     return 1;
 741              		.loc 1 245 5 is_stmt 1 view .LVU201
 742 0056 0C48     		ldr	r0, .L55+4
 743              	.LVL72:
 245:Src/log.c     ****     return 1;
 744              		.loc 1 245 5 is_stmt 0 view .LVU202
 745 0058 FFF7FEFF 		bl	puts
 746              	.LVL73:
 246:Src/log.c     ****   }
 747              		.loc 1 246 5 is_stmt 1 view .LVU203
 246:Src/log.c     ****   }
 748              		.loc 1 246 12 is_stmt 0 view .LVU204
 749 005c 0124     		movs	r4, #1
 750              	.LVL74:
 751              	.L46:
 272:Src/log.c     **** 
 752              		.loc 1 272 1 view .LVU205
 753 005e 2046     		mov	r0, r4
 754 0060 38BD     		pop	{r3, r4, r5, pc}
 755              	.LVL75:
 756              	.L53:
 254:Src/log.c     ****     HAL_FLASH_Lock();
 757              		.loc 1 254 5 is_stmt 1 view .LVU206
 758 0062 0A48     		ldr	r0, .L55+8
 759              	.LVL76:
 254:Src/log.c     ****     HAL_FLASH_Lock();
 760              		.loc 1 254 5 is_stmt 0 view .LVU207
 761 0064 FFF7FEFF 		bl	puts
 762              	.LVL77:
 255:Src/log.c     ****     return 1;
 763              		.loc 1 255 5 is_stmt 1 view .LVU208
 764 0068 FFF7FEFF 		bl	HAL_FLASH_Lock
 765              	.LVL78:
 256:Src/log.c     ****   }
 766              		.loc 1 256 5 view .LVU209
ARM GAS  /tmp/ccCMQWME.s 			page 26


 256:Src/log.c     ****   }
 767              		.loc 1 256 12 is_stmt 0 view .LVU210
 768 006c 0124     		movs	r4, #1
 769              	.LVL79:
 256:Src/log.c     ****   }
 770              		.loc 1 256 12 view .LVU211
 771 006e F6E7     		b	.L46
 772              	.LVL80:
 773              	.L54:
 261:Src/log.c     ****     HAL_FLASH_Lock();
 774              		.loc 1 261 5 is_stmt 1 view .LVU212
 775 0070 0748     		ldr	r0, .L55+12
 776              	.LVL81:
 261:Src/log.c     ****     HAL_FLASH_Lock();
 777              		.loc 1 261 5 is_stmt 0 view .LVU213
 778 0072 FFF7FEFF 		bl	puts
 779              	.LVL82:
 262:Src/log.c     ****     return 1;
 780              		.loc 1 262 5 is_stmt 1 view .LVU214
 781 0076 FFF7FEFF 		bl	HAL_FLASH_Lock
 782              	.LVL83:
 263:Src/log.c     ****   }
 783              		.loc 1 263 5 view .LVU215
 263:Src/log.c     ****   }
 784              		.loc 1 263 12 is_stmt 0 view .LVU216
 785 007a 0124     		movs	r4, #1
 786 007c EFE7     		b	.L46
 787              	.LVL84:
 788              	.L50:
 242:Src/log.c     ****   }
 789              		.loc 1 242 12 view .LVU217
 790 007e 0124     		movs	r4, #1
 791 0080 EDE7     		b	.L46
 792              	.L56:
 793 0082 00BF     		.align	2
 794              	.L55:
 795 0084 00000000 		.word	fs
 796 0088 00000000 		.word	.LC7
 797 008c 20000000 		.word	.LC8
 798 0090 44000000 		.word	.LC9
 799              		.cfi_endproc
 800              	.LFE314:
 802              		.section	.rodata.store_entry.str1.4,"aMS",%progbits,1
 803              		.align	2
 804              	.LC10:
 805 0000 4E4F4B20 		.ascii	"NOK (store_entry: write error)\015\000"
 805      2873746F 
 805      72655F65 
 805      6E747279 
 805      3A207772 
 806              		.section	.text.store_entry,"ax",%progbits
 807              		.align	1
 808              		.global	store_entry
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 812              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccCMQWME.s 			page 27


 814              	store_entry:
 815              	.LFB311:
 121:Src/log.c     ****   uint32_t period = calculate_period();
 816              		.loc 1 121 27 is_stmt 1 view -0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 16
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820 0000 70B5     		push	{r4, r5, r6, lr}
 821              	.LCFI8:
 822              		.cfi_def_cfa_offset 16
 823              		.cfi_offset 4, -16
 824              		.cfi_offset 5, -12
 825              		.cfi_offset 6, -8
 826              		.cfi_offset 14, -4
 827 0002 84B0     		sub	sp, sp, #16
 828              	.LCFI9:
 829              		.cfi_def_cfa_offset 32
 122:Src/log.c     ****   uint32_t temp = read_temp();
 830              		.loc 1 122 3 view .LVU219
 122:Src/log.c     ****   uint32_t temp = read_temp();
 831              		.loc 1 122 21 is_stmt 0 view .LVU220
 832 0004 FFF7FEFF 		bl	calculate_period
 833              	.LVL85:
 834 0008 0446     		mov	r4, r0
 835              	.LVL86:
 123:Src/log.c     ****   uint32_t voltage = read_vrefint();
 836              		.loc 1 123 3 is_stmt 1 view .LVU221
 123:Src/log.c     ****   uint32_t voltage = read_vrefint();
 837              		.loc 1 123 19 is_stmt 0 view .LVU222
 838 000a FFF7FEFF 		bl	read_temp
 839              	.LVL87:
 123:Src/log.c     ****   uint32_t voltage = read_vrefint();
 840              		.loc 1 123 19 view .LVU223
 841 000e 0546     		mov	r5, r0
 842              	.LVL88:
 124:Src/log.c     ****   uint32_t t = get_td_bits();
 843              		.loc 1 124 3 is_stmt 1 view .LVU224
 124:Src/log.c     ****   uint32_t t = get_td_bits();
 844              		.loc 1 124 22 is_stmt 0 view .LVU225
 845 0010 FFF7FEFF 		bl	read_vrefint
 846              	.LVL89:
 124:Src/log.c     ****   uint32_t t = get_td_bits();
 847              		.loc 1 124 22 view .LVU226
 848 0014 0646     		mov	r6, r0
 849              	.LVL90:
 125:Src/log.c     **** 
 850              		.loc 1 125 3 is_stmt 1 view .LVU227
 125:Src/log.c     **** 
 851              		.loc 1 125 16 is_stmt 0 view .LVU228
 852 0016 FFF7FEFF 		bl	get_td_bits
 853              	.LVL91:
 128:Src/log.c     ****     return -1;
 854              		.loc 1 128 3 is_stmt 1 view .LVU229
 131:Src/log.c     ****   data.watermark = 0x01;
 855              		.loc 1 131 3 view .LVU230
 132:Src/log.c     ****   data.status = SENSOR_DATA;
 856              		.loc 1 132 3 view .LVU231
ARM GAS  /tmp/ccCMQWME.s 			page 28


 132:Src/log.c     ****   data.status = SENSOR_DATA;
 857              		.loc 1 132 18 is_stmt 0 view .LVU232
 858 001a 0123     		movs	r3, #1
 859 001c 8DF80030 		strb	r3, [sp]
 133:Src/log.c     ****   data.record_number = fs.next_record_number;
 860              		.loc 1 133 3 is_stmt 1 view .LVU233
 133:Src/log.c     ****   data.record_number = fs.next_record_number;
 861              		.loc 1 133 15 is_stmt 0 view .LVU234
 862 0020 8DF80130 		strb	r3, [sp, #1]
 134:Src/log.c     ****   data.timestamp = t;
 863              		.loc 1 134 3 is_stmt 1 view .LVU235
 134:Src/log.c     ****   data.timestamp = t;
 864              		.loc 1 134 26 is_stmt 0 view .LVU236
 865 0024 0A4B     		ldr	r3, .L61
 866 0026 1B69     		ldr	r3, [r3, #16]
 134:Src/log.c     ****   data.timestamp = t;
 867              		.loc 1 134 22 view .LVU237
 868 0028 ADF80230 		strh	r3, [sp, #2]	@ movhi
 135:Src/log.c     ****   data.battery_voltage = (uint16_t) voltage;
 869              		.loc 1 135 3 is_stmt 1 view .LVU238
 135:Src/log.c     ****   data.battery_voltage = (uint16_t) voltage;
 870              		.loc 1 135 18 is_stmt 0 view .LVU239
 871 002c 0190     		str	r0, [sp, #4]
 136:Src/log.c     ****   data.temperature = (int16_t) temp;
 872              		.loc 1 136 3 is_stmt 1 view .LVU240
 136:Src/log.c     ****   data.temperature = (int16_t) temp;
 873              		.loc 1 136 24 is_stmt 0 view .LVU241
 874 002e ADF80860 		strh	r6, [sp, #8]	@ movhi
 137:Src/log.c     ****   data.sensor_period = (uint32_t) period;
 875              		.loc 1 137 3 is_stmt 1 view .LVU242
 137:Src/log.c     ****   data.sensor_period = (uint32_t) period;
 876              		.loc 1 137 20 is_stmt 0 view .LVU243
 877 0032 ADF80A50 		strh	r5, [sp, #10]	@ movhi
 138:Src/log.c     **** 
 878              		.loc 1 138 3 is_stmt 1 view .LVU244
 138:Src/log.c     **** 
 879              		.loc 1 138 22 is_stmt 0 view .LVU245
 880 0036 0394     		str	r4, [sp, #12]
 152:Src/log.c     ****   if(write_err) {
 881              		.loc 1 152 3 is_stmt 1 view .LVU246
 152:Src/log.c     ****   if(write_err) {
 882              		.loc 1 152 23 is_stmt 0 view .LVU247
 883 0038 6846     		mov	r0, sp
 884              	.LVL92:
 152:Src/log.c     ****   if(write_err) {
 885              		.loc 1 152 23 view .LVU248
 886 003a FFF7FEFF 		bl	write_record
 887              	.LVL93:
 153:Src/log.c     ****     printf("NOK (store_entry: write error)\r\n");
 888              		.loc 1 153 3 is_stmt 1 view .LVU249
 153:Src/log.c     ****     printf("NOK (store_entry: write error)\r\n");
 889              		.loc 1 153 5 is_stmt 0 view .LVU250
 890 003e 08B9     		cbnz	r0, .L60
 891              	.L58:
 158:Src/log.c     **** 
 892              		.loc 1 158 1 view .LVU251
 893 0040 04B0     		add	sp, sp, #16
ARM GAS  /tmp/ccCMQWME.s 			page 29


 894              	.LCFI10:
 895              		.cfi_remember_state
 896              		.cfi_def_cfa_offset 16
 897              		@ sp needed
 898 0042 70BD     		pop	{r4, r5, r6, pc}
 899              	.LVL94:
 900              	.L60:
 901              	.LCFI11:
 902              		.cfi_restore_state
 154:Src/log.c     ****     return 1;
 903              		.loc 1 154 5 is_stmt 1 view .LVU252
 904 0044 0348     		ldr	r0, .L61+4
 905 0046 FFF7FEFF 		bl	puts
 906              	.LVL95:
 155:Src/log.c     ****   }
 907              		.loc 1 155 5 view .LVU253
 155:Src/log.c     ****   }
 908              		.loc 1 155 12 is_stmt 0 view .LVU254
 909 004a 0120     		movs	r0, #1
 910 004c F8E7     		b	.L58
 911              	.L62:
 912 004e 00BF     		.align	2
 913              	.L61:
 914 0050 00000000 		.word	fs
 915 0054 00000000 		.word	.LC10
 916              		.cfi_endproc
 917              	.LFE311:
 919              		.section	.rodata.log_entry.str1.4,"aMS",%progbits,1
 920              		.align	2
 921              	.LC11:
 922 0000 4E4F4B20 		.ascii	"NOK (log_entry: write error)\015\000"
 922      286C6F67 
 922      5F656E74 
 922      72793A20 
 922      77726974 
 923              		.section	.text.log_entry,"ax",%progbits
 924              		.align	1
 925              		.global	log_entry
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 929              		.fpu fpv4-sp-d16
 931              	log_entry:
 932              	.LVL96:
 933              	.LFB312:
 161:Src/log.c     ****   uint32_t t = get_td_bits();
 934              		.loc 1 161 34 is_stmt 1 view -0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 16
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 161:Src/log.c     ****   uint32_t t = get_td_bits();
 938              		.loc 1 161 34 is_stmt 0 view .LVU256
 939 0000 10B5     		push	{r4, lr}
 940              	.LCFI12:
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
ARM GAS  /tmp/ccCMQWME.s 			page 30


 944 0002 84B0     		sub	sp, sp, #16
 945              	.LCFI13:
 946              		.cfi_def_cfa_offset 24
 947 0004 0446     		mov	r4, r0
 162:Src/log.c     ****   int i;
 948              		.loc 1 162 3 is_stmt 1 view .LVU257
 162:Src/log.c     ****   int i;
 949              		.loc 1 162 16 is_stmt 0 view .LVU258
 950 0006 FFF7FEFF 		bl	get_td_bits
 951              	.LVL97:
 163:Src/log.c     **** 
 952              		.loc 1 163 3 is_stmt 1 view .LVU259
 166:Src/log.c     ****     return -1;
 953              		.loc 1 166 3 view .LVU260
 168:Src/log.c     ****     return -1;
 954              		.loc 1 168 3 view .LVU261
 168:Src/log.c     ****     return -1;
 955              		.loc 1 168 5 is_stmt 0 view .LVU262
 956 000a 3CB3     		cbz	r4, .L68
 171:Src/log.c     ****   data.watermark = 0x01;
 957              		.loc 1 171 3 is_stmt 1 view .LVU263
 171:Src/log.c     ****   data.watermark = 0x01;
 958              		.loc 1 171 13 is_stmt 0 view .LVU264
 959 000c 0023     		movs	r3, #0
 960 000e 0293     		str	r3, [sp, #8]
 961 0010 0393     		str	r3, [sp, #12]
 172:Src/log.c     ****   data.status = LOG_DATA;
 962              		.loc 1 172 3 is_stmt 1 view .LVU265
 172:Src/log.c     ****   data.status = LOG_DATA;
 963              		.loc 1 172 18 is_stmt 0 view .LVU266
 964 0012 0122     		movs	r2, #1
 965 0014 8DF80020 		strb	r2, [sp]
 173:Src/log.c     ****   data.record_number = fs.next_record_number;
 966              		.loc 1 173 3 is_stmt 1 view .LVU267
 173:Src/log.c     ****   data.record_number = fs.next_record_number;
 967              		.loc 1 173 15 is_stmt 0 view .LVU268
 968 0018 0222     		movs	r2, #2
 969 001a 8DF80120 		strb	r2, [sp, #1]
 174:Src/log.c     ****   data.timestamp = t;
 970              		.loc 1 174 3 is_stmt 1 view .LVU269
 174:Src/log.c     ****   data.timestamp = t;
 971              		.loc 1 174 26 is_stmt 0 view .LVU270
 972 001e 104A     		ldr	r2, .L71
 973 0020 1269     		ldr	r2, [r2, #16]
 174:Src/log.c     ****   data.timestamp = t;
 974              		.loc 1 174 22 view .LVU271
 975 0022 ADF80220 		strh	r2, [sp, #2]	@ movhi
 175:Src/log.c     ****   //Copy the first seven characters of message
 976              		.loc 1 175 3 is_stmt 1 view .LVU272
 175:Src/log.c     ****   //Copy the first seven characters of message
 977              		.loc 1 175 18 is_stmt 0 view .LVU273
 978 0026 0190     		str	r0, [sp, #4]
 177:Src/log.c     ****     data.msg[i] = (uint8_t)message[i];
 979              		.loc 1 177 3 is_stmt 1 view .LVU274
 980              	.LVL98:
 177:Src/log.c     ****     data.msg[i] = (uint8_t)message[i];
 981              		.loc 1 177 3 is_stmt 0 view .LVU275
ARM GAS  /tmp/ccCMQWME.s 			page 31


 982 0028 04E0     		b	.L65
 983              	.LVL99:
 984              	.L67:
 178:Src/log.c     ****   }
 985              		.loc 1 178 5 is_stmt 1 discriminator 4 view .LVU276
 178:Src/log.c     ****   }
 986              		.loc 1 178 17 is_stmt 0 discriminator 4 view .LVU277
 987 002a 04A9     		add	r1, sp, #16
 988 002c 1944     		add	r1, r1, r3
 989 002e 01F8082C 		strb	r2, [r1, #-8]
 177:Src/log.c     ****     data.msg[i] = (uint8_t)message[i];
 990              		.loc 1 177 33 is_stmt 1 discriminator 4 view .LVU278
 177:Src/log.c     ****     data.msg[i] = (uint8_t)message[i];
 991              		.loc 1 177 34 is_stmt 0 discriminator 4 view .LVU279
 992 0032 0133     		adds	r3, r3, #1
 993              	.LVL100:
 994              	.L65:
 177:Src/log.c     ****     data.msg[i] = (uint8_t)message[i];
 995              		.loc 1 177 12 is_stmt 1 discriminator 1 view .LVU280
 177:Src/log.c     ****     data.msg[i] = (uint8_t)message[i];
 996              		.loc 1 177 19 is_stmt 0 discriminator 1 view .LVU281
 997 0034 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 177:Src/log.c     ****     data.msg[i] = (uint8_t)message[i];
 998              		.loc 1 177 3 discriminator 1 view .LVU282
 999 0036 0AB1     		cbz	r2, .L66
 177:Src/log.c     ****     data.msg[i] = (uint8_t)message[i];
 1000              		.loc 1 177 23 discriminator 3 view .LVU283
 1001 0038 062B     		cmp	r3, #6
 1002 003a F6DD     		ble	.L67
 1003              	.L66:
 180:Src/log.c     **** 
 1004              		.loc 1 180 3 is_stmt 1 view .LVU284
 180:Src/log.c     **** 
 1005              		.loc 1 180 15 is_stmt 0 view .LVU285
 1006 003c 04AA     		add	r2, sp, #16
 1007 003e 1344     		add	r3, r3, r2
 1008              	.LVL101:
 180:Src/log.c     **** 
 1009              		.loc 1 180 15 view .LVU286
 1010 0040 0022     		movs	r2, #0
 1011 0042 03F8082C 		strb	r2, [r3, #-8]
 192:Src/log.c     ****   if(write_err) {
 1012              		.loc 1 192 3 is_stmt 1 view .LVU287
 192:Src/log.c     ****   if(write_err) {
 1013              		.loc 1 192 23 is_stmt 0 view .LVU288
 1014 0046 6846     		mov	r0, sp
 1015              	.LVL102:
 192:Src/log.c     ****   if(write_err) {
 1016              		.loc 1 192 23 view .LVU289
 1017 0048 FFF7FEFF 		bl	write_record
 1018              	.LVL103:
 193:Src/log.c     ****     printf("NOK (log_entry: write error)\r\n");
 1019              		.loc 1 193 3 is_stmt 1 view .LVU290
 193:Src/log.c     ****     printf("NOK (log_entry: write error)\r\n");
 1020              		.loc 1 193 5 is_stmt 0 view .LVU291
 1021 004c 08B9     		cbnz	r0, .L70
 1022              	.LVL104:
ARM GAS  /tmp/ccCMQWME.s 			page 32


 1023              	.L64:
 198:Src/log.c     **** 
 1024              		.loc 1 198 1 view .LVU292
 1025 004e 04B0     		add	sp, sp, #16
 1026              	.LCFI14:
 1027              		.cfi_remember_state
 1028              		.cfi_def_cfa_offset 8
 1029              		@ sp needed
 1030 0050 10BD     		pop	{r4, pc}
 1031              	.LVL105:
 1032              	.L70:
 1033              	.LCFI15:
 1034              		.cfi_restore_state
 194:Src/log.c     ****     return 1;
 1035              		.loc 1 194 5 is_stmt 1 view .LVU293
 1036 0052 0448     		ldr	r0, .L71+4
 1037              	.LVL106:
 194:Src/log.c     ****     return 1;
 1038              		.loc 1 194 5 is_stmt 0 view .LVU294
 1039 0054 FFF7FEFF 		bl	puts
 1040              	.LVL107:
 195:Src/log.c     ****   }
 1041              		.loc 1 195 5 is_stmt 1 view .LVU295
 195:Src/log.c     ****   }
 1042              		.loc 1 195 12 is_stmt 0 view .LVU296
 1043 0058 0120     		movs	r0, #1
 1044 005a F8E7     		b	.L64
 1045              	.LVL108:
 1046              	.L68:
 169:Src/log.c     **** 
 1047              		.loc 1 169 12 view .LVU297
 1048 005c FF20     		movs	r0, #255
 1049              	.LVL109:
 169:Src/log.c     **** 
 1050              		.loc 1 169 12 view .LVU298
 1051 005e F6E7     		b	.L64
 1052              	.L72:
 1053              		.align	2
 1054              	.L71:
 1055 0060 00000000 		.word	fs
 1056 0064 00000000 		.word	.LC11
 1057              		.cfi_endproc
 1058              	.LFE312:
 1060              		.section	.rodata.find_sentinel_bottom.str1.4,"aMS",%progbits,1
 1061              		.align	2
 1062              	.LC12:
 1063 0000 4E4F4B20 		.ascii	"NOK (find_sentinel_bottom: sentinel not found)\015\000"
 1063      2866696E 
 1063      645F7365 
 1063      6E74696E 
 1063      656C5F62 
 1064              		.section	.text.find_sentinel_bottom,"ax",%progbits
 1065              		.align	1
 1066              		.global	find_sentinel_bottom
 1067              		.syntax unified
 1068              		.thumb
 1069              		.thumb_func
ARM GAS  /tmp/ccCMQWME.s 			page 33


 1070              		.fpu fpv4-sp-d16
 1072              	find_sentinel_bottom:
 1073              	.LVL110:
 1074              	.LFB316:
 370:Src/log.c     ****   //address the bottom of flash, fixed based on MCU variant
 1075              		.loc 1 370 65 is_stmt 1 view -0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 370:Src/log.c     ****   //address the bottom of flash, fixed based on MCU variant
 1079              		.loc 1 370 65 is_stmt 0 view .LVU300
 1080 0000 70B5     		push	{r4, r5, r6, lr}
 1081              	.LCFI16:
 1082              		.cfi_def_cfa_offset 16
 1083              		.cfi_offset 4, -16
 1084              		.cfi_offset 5, -12
 1085              		.cfi_offset 6, -8
 1086              		.cfi_offset 14, -4
 1087 0002 0646     		mov	r6, r0
 1088 0004 0846     		mov	r0, r1
 1089              	.LVL111:
 372:Src/log.c     **** 
 1090              		.loc 1 372 3 is_stmt 1 view .LVU301
 376:Src/log.c     ****     //printf("Curr: %x\r\n", current_addr);
 1091              		.loc 1 376 3 view .LVU302
 1092              	.L74:
 376:Src/log.c     ****     //printf("Curr: %x\r\n", current_addr);
 1093              		.loc 1 376 8 view .LVU303
 376:Src/log.c     ****     //printf("Curr: %x\r\n", current_addr);
 1094              		.loc 1 376 9 is_stmt 0 view .LVU304
 1095 0006 D0E90045 		ldrd	r4, [r0]
 376:Src/log.c     ****     //printf("Curr: %x\r\n", current_addr);
 1096              		.loc 1 376 8 view .LVU305
 1097 000a 08A3     		adr	r3, .L78+4
 1098 000c D3E90023 		ldrd	r2, [r3]
 1099 0010 9D42     		cmp	r5, r3
 1100 0012 08BF     		it	eq
 1101 0014 9442     		cmpeq	r4, r2
 1102 0016 06D0     		beq	.L75
 378:Src/log.c     ****     if(current_addr > top) {
 1103              		.loc 1 378 5 is_stmt 1 view .LVU306
 378:Src/log.c     ****     if(current_addr > top) {
 1104              		.loc 1 378 18 is_stmt 0 view .LVU307
 1105 0018 1030     		adds	r0, r0, #16
 1106              	.LVL112:
 379:Src/log.c     ****       printf("NOK (find_sentinel_bottom: sentinel not found)\r\n");
 1107              		.loc 1 379 5 is_stmt 1 view .LVU308
 379:Src/log.c     ****       printf("NOK (find_sentinel_bottom: sentinel not found)\r\n");
 1108              		.loc 1 379 7 is_stmt 0 view .LVU309
 1109 001a B042     		cmp	r0, r6
 1110 001c F3D9     		bls	.L74
 380:Src/log.c     ****       return 0;
 1111              		.loc 1 380 7 is_stmt 1 view .LVU310
 1112 001e 0248     		ldr	r0, .L78
 1113              	.LVL113:
 380:Src/log.c     ****       return 0;
 1114              		.loc 1 380 7 is_stmt 0 view .LVU311
ARM GAS  /tmp/ccCMQWME.s 			page 34


 1115 0020 FFF7FEFF 		bl	puts
 1116              	.LVL114:
 381:Src/log.c     ****     }
 1117              		.loc 1 381 7 is_stmt 1 view .LVU312
 381:Src/log.c     ****     }
 1118              		.loc 1 381 14 is_stmt 0 view .LVU313
 1119 0024 0020     		movs	r0, #0
 1120              	.L75:
 385:Src/log.c     **** /******************************************************************************/
 1121              		.loc 1 385 1 view .LVU314
 1122 0026 70BD     		pop	{r4, r5, r6, pc}
 1123              	.LVL115:
 1124              	.L79:
 385:Src/log.c     **** /******************************************************************************/
 1125              		.loc 1 385 1 view .LVU315
 1126              		.align	3
 1127              	.L78:
 1128 0028 00000000 		.word	.LC12
 1129 002c A5A5A5A5 		.word	-1515870811
 1130 0030 EFBEADDE 		.word	-559038737
 1131              		.cfi_endproc
 1132              	.LFE316:
 1134              		.section	.rodata.flash_write_init.str1.4,"aMS",%progbits,1
 1135              		.align	2
 1136              	.LC13:
 1137 0000 4E4F4B20 		.ascii	"NOK (flash_write_init: bottom sentinel)\015\000"
 1137      28666C61 
 1137      73685F77 
 1137      72697465 
 1137      5F696E69 
 1138 0029 000000   		.align	2
 1139              	.LC14:
 1140 002c 4E4F4B20 		.ascii	"NOK (flash_write_init: sentinel not at bottom)\015\000"
 1140      28666C61 
 1140      73685F77 
 1140      72697465 
 1140      5F696E69 
 1141              		.section	.text.flash_write_init,"ax",%progbits
 1142              		.align	1
 1143              		.global	flash_write_init
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv4-sp-d16
 1149              	flash_write_init:
 1150              	.LFB315:
 274:Src/log.c     ****   sensordata_t *sd = {0};
 1151              		.loc 1 274 28 is_stmt 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 16
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 1155 0000 10B5     		push	{r4, lr}
 1156              	.LCFI17:
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 4, -8
 1159              		.cfi_offset 14, -4
 1160 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccCMQWME.s 			page 35


 1161              	.LCFI18:
 1162              		.cfi_def_cfa_offset 24
 275:Src/log.c     ****   uint16_t record_counter = 0;
 1163              		.loc 1 275 3 view .LVU317
 1164              	.LVL116:
 276:Src/log.c     ****   //raw_t sentinel_top = {SENTINEL_MARK_TOP, 0};
 1165              		.loc 1 276 3 view .LVU318
 278:Src/log.c     **** 
 1166              		.loc 1 278 3 view .LVU319
 278:Src/log.c     **** 
 1167              		.loc 1 278 9 is_stmt 0 view .LVU320
 1168 0004 2AA3     		adr	r3, .L90+32
 1169 0006 D3E90023 		ldrd	r2, [r3]
 1170 000a CDE90023 		strd	r2, [sp]
 1171 000e 0022     		movs	r2, #0
 1172 0010 0023     		movs	r3, #0
 1173 0012 CDE90223 		strd	r2, [sp, #8]
 281:Src/log.c     ****                                         + (uint32_t)&_edata
 1174              		.loc 1 281 3 is_stmt 1 view .LVU321
 283:Src/log.c     ****   //address the top  of flash, fixed based on MCU variant
 1175              		.loc 1 283 41 is_stmt 0 view .LVU322
 1176 0016 1E49     		ldr	r1, .L90
 1177 0018 1E4B     		ldr	r3, .L90+4
 1178 001a 1F4A     		ldr	r2, .L90+8
 1179 001c 891A     		subs	r1, r1, r2
 1180 001e 1944     		add	r1, r1, r3
 1181              	.LVL117:
 285:Src/log.c     ****   //address of the bottom of flash available for records
 1182              		.loc 1 285 3 is_stmt 1 view .LVU323
 287:Src/log.c     ****   //top memory pointer: located at the very top of flash
 1183              		.loc 1 287 3 view .LVU324
 287:Src/log.c     ****   //top memory pointer: located at the very top of flash
 1184              		.loc 1 287 59 is_stmt 0 view .LVU325
 1185 0020 21F4FF61 		bic	r1, r1, #2040
 1186              	.LVL118:
 287:Src/log.c     ****   //top memory pointer: located at the very top of flash
 1187              		.loc 1 287 59 view .LVU326
 1188 0024 21F00701 		bic	r1, r1, #7
 287:Src/log.c     ****   //top memory pointer: located at the very top of flash
 1189              		.loc 1 287 69 view .LVU327
 1190 0028 01F50064 		add	r4, r1, #2048
 1191              	.LVL119:
 289:Src/log.c     ****   //bottom memory pointer: located at the first open page after the software
 1192              		.loc 1 289 3 is_stmt 1 view .LVU328
 291:Src/log.c     **** 
 1193              		.loc 1 291 3 view .LVU329
 291:Src/log.c     **** 
 1194              		.loc 1 291 18 is_stmt 0 view .LVU330
 1195 002c 2146     		mov	r1, r4
 1196 002e 1B48     		ldr	r0, .L90+12
 1197 0030 FFF7FEFF 		bl	find_sentinel_bottom
 1198              	.LVL120:
 305:Src/log.c     ****     /*Write top sentinel*/
 1199              		.loc 1 305 3 is_stmt 1 view .LVU331
 326:Src/log.c     ****     /*Write bottom sentinel*/
 1200              		.loc 1 326 8 view .LVU332
 326:Src/log.c     ****     /*Write bottom sentinel*/
ARM GAS  /tmp/ccCMQWME.s 			page 36


 1201              		.loc 1 326 14 is_stmt 0 view .LVU333
 1202 0034 98B1     		cbz	r0, .L88
 333:Src/log.c     ****     return -1;
 1203              		.loc 1 333 8 is_stmt 1 view .LVU334
 336:Src/log.c     ****     if(pb!=bottom) {
 1204              		.loc 1 336 8 view .LVU335
 337:Src/log.c     ****       printf("NOK (flash_write_init: sentinel not at bottom)\r\n");
 1205              		.loc 1 337 5 view .LVU336
 337:Src/log.c     ****       printf("NOK (flash_write_init: sentinel not at bottom)\r\n");
 1206              		.loc 1 337 7 is_stmt 0 view .LVU337
 1207 0036 8442     		cmp	r4, r0
 1208 0038 1CD1     		bne	.L89
 1209              	.LVL121:
 1210              	.L82:
 348:Src/log.c     ****   fs.max_possible_records = (((uint32_t)top-(uint32_t)bottom)>>4)-1;
 1211              		.loc 1 348 3 is_stmt 1 view .LVU338
 348:Src/log.c     ****   fs.max_possible_records = (((uint32_t)top-(uint32_t)bottom)>>4)-1;
 1212              		.loc 1 348 17 is_stmt 0 view .LVU339
 1213 003a 1949     		ldr	r1, .L90+16
 1214 003c 194A     		ldr	r2, .L90+20
 1215 003e 0A60     		str	r2, [r1]
 349:Src/log.c     ****   sd = (sensordata_t *) top;
 1216              		.loc 1 349 3 is_stmt 1 view .LVU340
 349:Src/log.c     ****   sd = (sensordata_t *) top;
 1217              		.loc 1 349 44 is_stmt 0 view .LVU341
 1218 0040 164B     		ldr	r3, .L90+12
 1219 0042 1B1B     		subs	r3, r3, r4
 349:Src/log.c     ****   sd = (sensordata_t *) top;
 1220              		.loc 1 349 62 view .LVU342
 1221 0044 1B09     		lsrs	r3, r3, #4
 349:Src/log.c     ****   sd = (sensordata_t *) top;
 1222              		.loc 1 349 66 view .LVU343
 1223 0046 013B     		subs	r3, r3, #1
 349:Src/log.c     ****   sd = (sensordata_t *) top;
 1224              		.loc 1 349 27 view .LVU344
 1225 0048 8B60     		str	r3, [r1, #8]
 350:Src/log.c     ****   sd--;
 1226              		.loc 1 350 3 is_stmt 1 view .LVU345
 1227              	.LVL122:
 351:Src/log.c     ****   while ((sd->watermark!=0xFF) && (sd->watermark!=0xa5)) {
 1228              		.loc 1 351 3 view .LVU346
 352:Src/log.c     ****     record_counter++;
 1229              		.loc 1 352 3 view .LVU347
 276:Src/log.c     ****   //raw_t sentinel_top = {SENTINEL_MARK_TOP, 0};
 1230              		.loc 1 276 12 is_stmt 0 view .LVU348
 1231 004a 0023     		movs	r3, #0
 1232              	.LVL123:
 1233              	.L84:
 352:Src/log.c     ****     record_counter++;
 1234              		.loc 1 352 9 is_stmt 1 view .LVU349
 352:Src/log.c     ****     record_counter++;
 1235              		.loc 1 352 13 is_stmt 0 view .LVU350
 1236 004c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 352:Src/log.c     ****     record_counter++;
 1237              		.loc 1 352 9 view .LVU351
 1238 004e FF29     		cmp	r1, #255
 1239 0050 15D0     		beq	.L85
ARM GAS  /tmp/ccCMQWME.s 			page 37


 352:Src/log.c     ****     record_counter++;
 1240              		.loc 1 352 32 discriminator 1 view .LVU352
 1241 0052 A529     		cmp	r1, #165
 1242 0054 13D0     		beq	.L85
 353:Src/log.c     ****     sd--;
 1243              		.loc 1 353 5 is_stmt 1 view .LVU353
 353:Src/log.c     ****     sd--;
 1244              		.loc 1 353 19 is_stmt 0 view .LVU354
 1245 0056 0133     		adds	r3, r3, #1
 1246              	.LVL124:
 353:Src/log.c     ****     sd--;
 1247              		.loc 1 353 19 view .LVU355
 1248 0058 9BB2     		uxth	r3, r3
 1249              	.LVL125:
 354:Src/log.c     ****   }
 1250              		.loc 1 354 5 is_stmt 1 view .LVU356
 354:Src/log.c     ****   }
 1251              		.loc 1 354 7 is_stmt 0 view .LVU357
 1252 005a 103A     		subs	r2, r2, #16
 1253              	.LVL126:
 354:Src/log.c     ****   }
 1254              		.loc 1 354 7 view .LVU358
 1255 005c F6E7     		b	.L84
 1256              	.LVL127:
 1257              	.L88:
 328:Src/log.c     ****       printf("NOK (flash_write_init: bottom sentinel)\r\n");
 1258              		.loc 1 328 5 is_stmt 1 view .LVU359
 328:Src/log.c     ****       printf("NOK (flash_write_init: bottom sentinel)\r\n");
 1259              		.loc 1 328 8 is_stmt 0 view .LVU360
 1260 005e 6946     		mov	r1, sp
 1261 0060 2046     		mov	r0, r4
 1262              	.LVL128:
 328:Src/log.c     ****       printf("NOK (flash_write_init: bottom sentinel)\r\n");
 1263              		.loc 1 328 8 view .LVU361
 1264 0062 FFF7FEFF 		bl	write_sentinel
 1265              	.LVL129:
 328:Src/log.c     ****       printf("NOK (flash_write_init: bottom sentinel)\r\n");
 1266              		.loc 1 328 7 view .LVU362
 1267 0066 0028     		cmp	r0, #0
 1268 0068 E7D0     		beq	.L82
 329:Src/log.c     ****       return -1;
 1269              		.loc 1 329 7 is_stmt 1 view .LVU363
 1270 006a 0F48     		ldr	r0, .L90+24
 1271 006c FFF7FEFF 		bl	puts
 1272              	.LVL130:
 330:Src/log.c     ****     }
 1273              		.loc 1 330 7 view .LVU364
 330:Src/log.c     ****     }
 1274              		.loc 1 330 14 is_stmt 0 view .LVU365
 1275 0070 FF20     		movs	r0, #255
 1276 0072 09E0     		b	.L83
 1277              	.LVL131:
 1278              	.L89:
 338:Src/log.c     ****       return -1;
 1279              		.loc 1 338 7 is_stmt 1 view .LVU366
 1280 0074 0D48     		ldr	r0, .L90+28
 1281              	.LVL132:
ARM GAS  /tmp/ccCMQWME.s 			page 38


 338:Src/log.c     ****       return -1;
 1282              		.loc 1 338 7 is_stmt 0 view .LVU367
 1283 0076 FFF7FEFF 		bl	puts
 1284              	.LVL133:
 339:Src/log.c     ****     }
 1285              		.loc 1 339 7 is_stmt 1 view .LVU368
 339:Src/log.c     ****     }
 1286              		.loc 1 339 14 is_stmt 0 view .LVU369
 1287 007a FF20     		movs	r0, #255
 1288 007c 04E0     		b	.L83
 1289              	.LVL134:
 1290              	.L85:
 356:Src/log.c     ****   fs.total_records = record_counter;
 1291              		.loc 1 356 3 is_stmt 1 view .LVU370
 356:Src/log.c     ****   fs.total_records = record_counter;
 1292              		.loc 1 356 25 is_stmt 0 view .LVU371
 1293 007e 0849     		ldr	r1, .L90+16
 1294 0080 0B61     		str	r3, [r1, #16]
 357:Src/log.c     ****   fs.next_address = (uint64_t *) sd;
 1295              		.loc 1 357 3 is_stmt 1 view .LVU372
 357:Src/log.c     ****   fs.next_address = (uint64_t *) sd;
 1296              		.loc 1 357 20 is_stmt 0 view .LVU373
 1297 0082 4B60     		str	r3, [r1, #4]
 358:Src/log.c     **** 
 1298              		.loc 1 358 3 is_stmt 1 view .LVU374
 358:Src/log.c     **** 
 1299              		.loc 1 358 19 is_stmt 0 view .LVU375
 1300 0084 CA60     		str	r2, [r1, #12]
 360:Src/log.c     **** }
 1301              		.loc 1 360 3 is_stmt 1 view .LVU376
 360:Src/log.c     **** }
 1302              		.loc 1 360 10 is_stmt 0 view .LVU377
 1303 0086 0020     		movs	r0, #0
 1304              	.LVL135:
 1305              	.L83:
 361:Src/log.c     **** 
 1306              		.loc 1 361 1 view .LVU378
 1307 0088 04B0     		add	sp, sp, #16
 1308              	.LCFI19:
 1309              		.cfi_def_cfa_offset 8
 1310              		@ sp needed
 1311 008a 10BD     		pop	{r4, pc}
 1312              	.LVL136:
 1313              	.L91:
 361:Src/log.c     **** 
 1314              		.loc 1 361 1 view .LVU379
 1315 008c AFF30080 		.align	3
 1316              	.L90:
 1317 0090 00000000 		.word	__fini_array_end
 1318 0094 00000000 		.word	_edata
 1319 0098 00000000 		.word	_sdata
 1320 009c F0FF0308 		.word	134479856
 1321 00a0 00000000 		.word	fs
 1322 00a4 E0FF0308 		.word	134479840
 1323 00a8 00000000 		.word	.LC13
 1324 00ac 2C000000 		.word	.LC14
 1325 00b0 A5A5A5A5 		.word	-1515870811
ARM GAS  /tmp/ccCMQWME.s 			page 39


 1326 00b4 EFBEADDE 		.word	-559038737
 1327              		.cfi_endproc
 1328              	.LFE315:
 1330              		.section	.text.flash_erase,"ax",%progbits
 1331              		.align	1
 1332              		.global	flash_erase
 1333              		.syntax unified
 1334              		.thumb
 1335              		.thumb_func
 1336              		.fpu fpv4-sp-d16
 1338              	flash_erase:
 1339              	.LFB317:
 389:Src/log.c     ****   uint32_t FirstPage = 0, NbOfPages = 0, BankNumber = 0;
 1340              		.loc 1 389 23 is_stmt 1 view -0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 8
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1345              	.LCFI20:
 1346              		.cfi_def_cfa_offset 20
 1347              		.cfi_offset 4, -20
 1348              		.cfi_offset 5, -16
 1349              		.cfi_offset 6, -12
 1350              		.cfi_offset 7, -8
 1351              		.cfi_offset 14, -4
 1352 0002 83B0     		sub	sp, sp, #12
 1353              	.LCFI21:
 1354              		.cfi_def_cfa_offset 32
 390:Src/log.c     ****   uint32_t PAGEError = 0;
 1355              		.loc 1 390 3 view .LVU381
 1356              	.LVL137:
 391:Src/log.c     ****   /* __IO uint32_t data32 = 0 , MemoryProgramStatus = 0; */
 1357              		.loc 1 391 3 view .LVU382
 391:Src/log.c     ****   /* __IO uint32_t data32 = 0 , MemoryProgramStatus = 0; */
 1358              		.loc 1 391 12 is_stmt 0 view .LVU383
 1359 0004 0026     		movs	r6, #0
 1360 0006 0196     		str	r6, [sp, #4]
 394:Src/log.c     ****   uint32_t program_end = ((uint32_t )&__fini_array_end
 1361              		.loc 1 394 3 is_stmt 1 view .LVU384
 395:Src/log.c     ****                   + (uint32_t)&_edata
 1362              		.loc 1 395 3 view .LVU385
 397:Src/log.c     ****   uint32_t bottom  = (((uint32_t)program_end & ~0x7FF) + 0x800);
 1363              		.loc 1 397 19 is_stmt 0 view .LVU386
 1364 0008 184B     		ldr	r3, .L97
 395:Src/log.c     ****                   + (uint32_t)&_edata
 1365              		.loc 1 395 12 view .LVU387
 1366 000a 1948     		ldr	r0, .L97+4
 1367 000c 194A     		ldr	r2, .L97+8
 1368 000e 9B1A     		subs	r3, r3, r2
 1369 0010 1844     		add	r0, r0, r3
 1370              	.LVL138:
 398:Src/log.c     ****   uint32_t top = FLASH_END;
 1371              		.loc 1 398 3 is_stmt 1 view .LVU388
 398:Src/log.c     ****   uint32_t top = FLASH_END;
 1372              		.loc 1 398 46 is_stmt 0 view .LVU389
 1373 0012 20F4FF60 		bic	r0, r0, #2040
 1374              	.LVL139:
ARM GAS  /tmp/ccCMQWME.s 			page 40


 398:Src/log.c     ****   uint32_t top = FLASH_END;
 1375              		.loc 1 398 46 view .LVU390
 1376 0016 20F00700 		bic	r0, r0, #7
 398:Src/log.c     ****   uint32_t top = FLASH_END;
 1377              		.loc 1 398 12 view .LVU391
 1378 001a 00F50064 		add	r4, r0, #2048
 1379              	.LVL140:
 399:Src/log.c     **** 
 1380              		.loc 1 399 3 is_stmt 1 view .LVU392
 401:Src/log.c     ****   /* Clear OPTVERR bit set on virgin samples */
 1381              		.loc 1 401 3 view .LVU393
 1382 001e FFF7FEFF 		bl	HAL_FLASH_Unlock
 1383              	.LVL141:
 403:Src/log.c     ****   /* Get the 1st page to erase */
 1384              		.loc 1 403 3 view .LVU394
 403:Src/log.c     ****   /* Get the 1st page to erase */
 1385              		.loc 1 403 3 view .LVU395
 403:Src/log.c     ****   /* Get the 1st page to erase */
 1386              		.loc 1 403 3 view .LVU396
 403:Src/log.c     ****   /* Get the 1st page to erase */
 1387              		.loc 1 403 3 view .LVU397
 1388 0022 154B     		ldr	r3, .L97+12
 1389 0024 4FF40042 		mov	r2, #32768
 1390 0028 1A61     		str	r2, [r3, #16]
 403:Src/log.c     ****   /* Get the 1st page to erase */
 1391              		.loc 1 403 3 view .LVU398
 405:Src/log.c     ****   /* Get the number of pages to erase from 1st page */
 1392              		.loc 1 405 3 view .LVU399
 405:Src/log.c     ****   /* Get the number of pages to erase from 1st page */
 1393              		.loc 1 405 15 is_stmt 0 view .LVU400
 1394 002a 2046     		mov	r0, r4
 1395 002c FFF7FEFF 		bl	GetPage
 1396              	.LVL142:
 1397 0030 0746     		mov	r7, r0
 1398              	.LVL143:
 407:Src/log.c     ****   /* Get the bank */
 1399              		.loc 1 407 3 is_stmt 1 view .LVU401
 407:Src/log.c     ****   /* Get the bank */
 1400              		.loc 1 407 15 is_stmt 0 view .LVU402
 1401 0032 1248     		ldr	r0, .L97+16
 1402              	.LVL144:
 407:Src/log.c     ****   /* Get the bank */
 1403              		.loc 1 407 15 view .LVU403
 1404 0034 FFF7FEFF 		bl	GetPage
 1405              	.LVL145:
 407:Src/log.c     ****   /* Get the bank */
 1406              		.loc 1 407 28 view .LVU404
 1407 0038 C51B     		subs	r5, r0, r7
 407:Src/log.c     ****   /* Get the bank */
 1408              		.loc 1 407 13 view .LVU405
 1409 003a 0135     		adds	r5, r5, #1
 1410              	.LVL146:
 409:Src/log.c     ****   /* Fill EraseInit structure*/
 1411              		.loc 1 409 3 is_stmt 1 view .LVU406
 409:Src/log.c     ****   /* Fill EraseInit structure*/
 1412              		.loc 1 409 16 is_stmt 0 view .LVU407
 1413 003c 2046     		mov	r0, r4
ARM GAS  /tmp/ccCMQWME.s 			page 41


 1414 003e FFF7FEFF 		bl	GetBank
 1415              	.LVL147:
 411:Src/log.c     ****   EraseInitStruct.Banks       = BankNumber;
 1416              		.loc 1 411 3 is_stmt 1 view .LVU408
 411:Src/log.c     ****   EraseInitStruct.Banks       = BankNumber;
 1417              		.loc 1 411 31 is_stmt 0 view .LVU409
 1418 0042 0F4B     		ldr	r3, .L97+20
 1419 0044 1E60     		str	r6, [r3]
 412:Src/log.c     ****   EraseInitStruct.Page        = FirstPage;
 1420              		.loc 1 412 3 is_stmt 1 view .LVU410
 412:Src/log.c     ****   EraseInitStruct.Page        = FirstPage;
 1421              		.loc 1 412 31 is_stmt 0 view .LVU411
 1422 0046 5860     		str	r0, [r3, #4]
 413:Src/log.c     ****   EraseInitStruct.NbPages     = NbOfPages;
 1423              		.loc 1 413 3 is_stmt 1 view .LVU412
 413:Src/log.c     ****   EraseInitStruct.NbPages     = NbOfPages;
 1424              		.loc 1 413 31 is_stmt 0 view .LVU413
 1425 0048 9F60     		str	r7, [r3, #8]
 414:Src/log.c     **** 
 1426              		.loc 1 414 3 is_stmt 1 view .LVU414
 414:Src/log.c     **** 
 1427              		.loc 1 414 31 is_stmt 0 view .LVU415
 1428 004a DD60     		str	r5, [r3, #12]
 420:Src/log.c     ****     HAL_FLASH_Lock();
 1429              		.loc 1 420 3 is_stmt 1 view .LVU416
 420:Src/log.c     ****     HAL_FLASH_Lock();
 1430              		.loc 1 420 7 is_stmt 0 view .LVU417
 1431 004c 01A9     		add	r1, sp, #4
 1432 004e 1846     		mov	r0, r3
 1433              	.LVL148:
 420:Src/log.c     ****     HAL_FLASH_Lock();
 1434              		.loc 1 420 7 view .LVU418
 1435 0050 FFF7FEFF 		bl	HAL_FLASHEx_Erase
 1436              	.LVL149:
 420:Src/log.c     ****     HAL_FLASH_Lock();
 1437              		.loc 1 420 6 view .LVU419
 1438 0054 20B9     		cbnz	r0, .L96
 424:Src/log.c     ****   return(0);
 1439              		.loc 1 424 3 is_stmt 1 view .LVU420
 1440 0056 FFF7FEFF 		bl	HAL_FLASH_Lock
 1441              	.LVL150:
 425:Src/log.c     **** }
 1442              		.loc 1 425 3 view .LVU421
 425:Src/log.c     **** }
 1443              		.loc 1 425 9 is_stmt 0 view .LVU422
 1444 005a 0020     		movs	r0, #0
 1445              	.L92:
 426:Src/log.c     **** 
 1446              		.loc 1 426 1 view .LVU423
 1447 005c 03B0     		add	sp, sp, #12
 1448              	.LCFI22:
 1449              		.cfi_remember_state
 1450              		.cfi_def_cfa_offset 20
 1451              		@ sp needed
 1452 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 1453              	.LVL151:
 1454              	.L96:
ARM GAS  /tmp/ccCMQWME.s 			page 42


 1455              	.LCFI23:
 1456              		.cfi_restore_state
 421:Src/log.c     ****     return (-1);
 1457              		.loc 1 421 5 is_stmt 1 view .LVU424
 1458 0060 FFF7FEFF 		bl	HAL_FLASH_Lock
 1459              	.LVL152:
 422:Src/log.c     ****   }
 1460              		.loc 1 422 5 view .LVU425
 422:Src/log.c     ****   }
 1461              		.loc 1 422 12 is_stmt 0 view .LVU426
 1462 0064 4FF0FF30 		mov	r0, #-1
 1463 0068 F8E7     		b	.L92
 1464              	.L98:
 1465 006a 00BF     		.align	2
 1466              	.L97:
 1467 006c 00000000 		.word	__fini_array_end
 1468 0070 00000000 		.word	_edata
 1469 0074 00000000 		.word	_sdata
 1470 0078 00200240 		.word	1073881088
 1471 007c F0FF0308 		.word	134479856
 1472 0080 00000000 		.word	.LANCHOR0
 1473              		.cfi_endproc
 1474              	.LFE317:
 1476              		.comm	fs,20,4
 1477              		.section	.bss.EraseInitStruct.11808,"aw",%nobits
 1478              		.align	2
 1479              		.set	.LANCHOR0,. + 0
 1482              	EraseInitStruct.11808:
 1483 0000 00000000 		.space	16
 1483      00000000 
 1483      00000000 
 1483      00000000 
 1484              		.text
 1485              	.Letext0:
 1486              		.file 2 "/nfs/nfs5/home/research/hardware/arm2/gcc-arm-embedded/gcc-arm-none-eabi-9-2019-q4-major/
 1487              		.file 3 "/nfs/nfs5/home/research/hardware/arm2/gcc-arm-embedded/gcc-arm-none-eabi-9-2019-q4-major/
 1488              		.file 4 "/nfs/nfs5/home/research/hardware/arm2/gcc-arm-embedded/gcc-arm-none-eabi-9-2019-q4-major/
 1489              		.file 5 "/nfs/nfs5/home/research/hardware/arm2/gcc-arm-embedded/gcc-arm-none-eabi-9-2019-q4-major/
 1490              		.file 6 "/nfs/nfs5/home/research/hardware/arm2/gcc-arm-embedded/gcc-arm-none-eabi-9-2019-q4-major/
 1491              		.file 7 "/nfs/nfs5/home/research/hardware/arm2/gcc-arm-embedded/gcc-arm-none-eabi-9-2019-q4-major/
 1492              		.file 8 "/nfs/nfs5/home/research/hardware/arm2/gcc-arm-embedded/gcc-arm-none-eabi-9-2019-q4-major/
 1493              		.file 9 "/nfs/nfs5/home/research/hardware/arm2/gcc-arm-embedded/gcc-arm-none-eabi-9-2019-q4-major/
 1494              		.file 10 "/nfs/nfs5/home/research/hardware/arm2/gcc-arm-embedded/gcc-arm-none-eabi-9-2019-q4-major
 1495              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 1496              		.file 12 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 1497              		.file 13 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 1498              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1499              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 1500              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 1501              		.file 17 "/nfs/nfs5/home/research/hardware/arm2/gcc-arm-embedded/gcc-arm-none-eabi-9-2019-q4-major
 1502              		.file 18 "Inc/log.h"
 1503              		.file 19 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash_ex.h"
 1504              		.file 20 "Inc/rtc.h"
 1505              		.file 21 "Inc/sensor.h"
 1506              		.file 22 "/nfs/nfs5/home/research/hardware/arm2/gcc-arm-embedded/gcc-arm-none-eabi-9-2019-q4-major
 1507              		.file 23 "<built-in>"
ARM GAS  /tmp/ccCMQWME.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 log.c
     /tmp/ccCMQWME.s:18     .text.GetPage:0000000000000000 $t
     /tmp/ccCMQWME.s:25     .text.GetPage:0000000000000000 GetPage
     /tmp/ccCMQWME.s:81     .text.GetPage:0000000000000030 $d
     /tmp/ccCMQWME.s:88     .text.GetBank:0000000000000000 $t
     /tmp/ccCMQWME.s:94     .text.GetBank:0000000000000000 GetBank
     /tmp/ccCMQWME.s:112    .rodata.print_logs.str1.4:0000000000000000 $d
     /tmp/ccCMQWME.s:122    .text.print_logs:0000000000000000 $t
     /tmp/ccCMQWME.s:129    .text.print_logs:0000000000000000 print_logs
     /tmp/ccCMQWME.s:296    .text.print_logs:00000000000000a4 $d
                            *COM*:0000000000000014 fs
     /tmp/ccCMQWME.s:304    .rodata.print_data.str1.4:0000000000000000 $d
     /tmp/ccCMQWME.s:308    .text.print_data:0000000000000000 $t
     /tmp/ccCMQWME.s:315    .text.print_data:0000000000000000 print_data
     /tmp/ccCMQWME.s:486    .text.print_data:00000000000000cc $d
     /tmp/ccCMQWME.s:494    .rodata.write_sentinel.str1.4:0000000000000000 $d
     /tmp/ccCMQWME.s:504    .text.write_sentinel:0000000000000000 $t
     /tmp/ccCMQWME.s:511    .text.write_sentinel:0000000000000000 write_sentinel
     /tmp/ccCMQWME.s:621    .text.write_sentinel:000000000000005c $d
     /tmp/ccCMQWME.s:628    .rodata.write_record.str1.4:0000000000000000 $d
     /tmp/ccCMQWME.s:638    .text.write_record:0000000000000000 $t
     /tmp/ccCMQWME.s:645    .text.write_record:0000000000000000 write_record
     /tmp/ccCMQWME.s:795    .text.write_record:0000000000000084 $d
     /tmp/ccCMQWME.s:803    .rodata.store_entry.str1.4:0000000000000000 $d
     /tmp/ccCMQWME.s:807    .text.store_entry:0000000000000000 $t
     /tmp/ccCMQWME.s:814    .text.store_entry:0000000000000000 store_entry
     /tmp/ccCMQWME.s:914    .text.store_entry:0000000000000050 $d
     /tmp/ccCMQWME.s:920    .rodata.log_entry.str1.4:0000000000000000 $d
     /tmp/ccCMQWME.s:924    .text.log_entry:0000000000000000 $t
     /tmp/ccCMQWME.s:931    .text.log_entry:0000000000000000 log_entry
     /tmp/ccCMQWME.s:1055   .text.log_entry:0000000000000060 $d
     /tmp/ccCMQWME.s:1061   .rodata.find_sentinel_bottom.str1.4:0000000000000000 $d
     /tmp/ccCMQWME.s:1065   .text.find_sentinel_bottom:0000000000000000 $t
     /tmp/ccCMQWME.s:1072   .text.find_sentinel_bottom:0000000000000000 find_sentinel_bottom
     /tmp/ccCMQWME.s:1128   .text.find_sentinel_bottom:0000000000000028 $d
     /tmp/ccCMQWME.s:1135   .rodata.flash_write_init.str1.4:0000000000000000 $d
     /tmp/ccCMQWME.s:1142   .text.flash_write_init:0000000000000000 $t
     /tmp/ccCMQWME.s:1149   .text.flash_write_init:0000000000000000 flash_write_init
     /tmp/ccCMQWME.s:1317   .text.flash_write_init:0000000000000090 $d
     /tmp/ccCMQWME.s:1331   .text.flash_erase:0000000000000000 $t
     /tmp/ccCMQWME.s:1338   .text.flash_erase:0000000000000000 flash_erase
     /tmp/ccCMQWME.s:1467   .text.flash_erase:000000000000006c $d
     /tmp/ccCMQWME.s:1478   .bss.EraseInitStruct.11808:0000000000000000 $d
     /tmp/ccCMQWME.s:1482   .bss.EraseInitStruct.11808:0000000000000000 EraseInitStruct.11808

UNDEFINED SYMBOLS
localtime
strftime
printf
putchar
puts
HAL_FLASH_Unlock
HAL_FLASH_Program
HAL_FLASH_Lock
calculate_period
read_temp
ARM GAS  /tmp/ccCMQWME.s 			page 44


read_vrefint
get_td_bits
__fini_array_end
_edata
_sdata
HAL_FLASHEx_Erase
